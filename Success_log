Push event to branch feature-PBBEF-1571
17:54:42 Connecting to https://git.express-scripts.com/api/v3 using This is the enterprise Health Services GitHub credentials for Jenkins
Obtained Jenkinsfile from 404bbc05e2025db132341608bc16599b33be8d6a
[Pipeline] Start of Pipeline
[Pipeline] library
Loading library epf@main
Examining cigna/enterprise-pipeline-framework
Attempting to resolve main as a branch
Resolved main as branch main at revision 07567cc4da27edb01fcd86e0a2bf7995d3b8ea0c
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/jobs/orchestrators-folders/jobs/pbbef/jobs/Non-Production/jobs/TERRAFORMS/jobs/aws-terraform-hs-bef-intentapi/branches/feature-PBBEF-1571/workspace@libs/3c1ad5b67ee798f247d765c15302ae0bdd27719722cb644afcd8575eac3ef99a/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.sys.cigna.com/cigna/enterprise-pipeline-framework.git # timeout=10
Pruning obsolete local branches
Pruning obsolete local tags that do not exist on remotes
 > git show-ref --tags -d # timeout=10
 > git --version # timeout=10
 > git --version # 'git version 2.43.5'
 > git ls-remote -t -- https://github.sys.cigna.com/cigna/enterprise-pipeline-framework.git # timeout=10
 > git tag -d release # timeout=10
Using shallow fetch with depth 1
Fetching upstream changes from https://github.sys.cigna.com/cigna/enterprise-pipeline-framework.git
 > git fetch --tags --force --progress --prune --depth=1 -- https://github.sys.cigna.com/cigna/enterprise-pipeline-framework.git +refs/heads/main:refs/remotes/origin/main # timeout=10
Checking out Revision 07567cc4da27edb01fcd86e0a2bf7995d3b8ea0c (main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 07567cc4da27edb01fcd86e0a2bf7995d3b8ea0c # timeout=10
Commit message: "Merge pull request #423 from cigna/cnpt-2049/stack-trace"
 > git rev-list --no-walk 07567cc4da27edb01fcd86e0a2bf7995d3b8ea0c # timeout=10
[Pipeline] sendSplunkConsoleLog
[Pipeline] {
[Pipeline] libraryResource
[Pipeline] echo
 .----------------. .----------------. .----------------. .----------------. .----------------. .----------------. .----------------.
| .--------------. | .--------------. | .--------------. | .--------------. | .--------------. | .--------------. | .--------------. |
| |              | | |              | | |  _________   | | |   ______     | | |  _________   | | |              | | |              | |
| |              | | |              | | | |_   ___  |  | | |  |_   __ \   | | | |_   ___  |  | | |              | | |              | |
| |    ______    | | |    ______    | | |   | |_  \_|  | | |    | |__) |  | | |   | |_  \_|  | | |    ______    | | |    ______    | |
| |   |______|   | | |   |______|   | | |   |  _|  _   | | |    |  ___/   | | |   |  _|      | | |   |______|   | | |   |______|   | |
| |              | | |              | | |  _| |___/ |  | | |   _| |_      | | |  _| |_       | | |              | | |              | |
| |              | | |              | | | |_________|  | | |  |_____|     | | | |_____|      | | |              | | |              | |
| |              | | |              | | |              | | |              | | |              | | |              | | |              | |
| '--------------' | '--------------' | '--------------' | '--------------' | '--------------' | '--------------' | '--------------' |
 '----------------' '----------------' '----------------' '----------------' '----------------' '----------------' '----------------'

******************************************************************************************************************************************
*                                                        *** COMPLIANCE NOTICE ***                                                       *
*  Users to specify a Goals file if needed to check their current compliance posture. If not specified the pipeline will create a goals  *
*  file automatically and add the Pipeline goal. This change will allow for the removal of Production deployment phases if a pipelines   *
*  compliance posture is invalid. For more information on how to modify your pipeline to allow production deployments, please visit:     *
*                                   https://github.sys.cigna.com/cigna/adjudicator/wiki/How-to-Use                                       *
*                                                                                                                                        *
*                                                         *** VERSION NOTICE ***                                                         *
*  The EPF team supports the past three major and minor released versions of the shared pipeline. If teams are using an unsupported      *
*  version it is the teams responsibility to resolve issues. For available supported versions please see:                                *                                                                                                                            *
*                                    https://github.sys.cigna.com/cigna/enterprise-pipeline-framework/tags                               *
*                                                                                                                                        *
******************************************************************************************************************************************
[Pipeline] echo
Feature Flags: showStackTraces=false, nonProdComplianceChecks=true, debug=false, verbose=false, legacyCheckout=false, injectCheckpoints=false, podAutotuning=[enabled:false, dryRun:true]
[Pipeline] echo
Follow the below link to see resource metrics for this pipeline:
https://o-grafana.apps.devops-1-prod.openshift.cignacloud.com/d/xnyVI_3Mk/namespace-container-metrics?orgId=1&refresh=10s&from=1739382881512&to=1739382891695&var-namespace=pbbef-openshift-devops1 
[Pipeline] echo
Using GitHubSCM provider for name: EPF, state: pending, phase: Status Check, as: null
[Pipeline] timestamps
[Pipeline] {
[Pipeline] properties
[Pipeline] parallel
[Pipeline] { (Branch: sendEmail)
[Pipeline] { (Branch: sendMattermost)
[Pipeline] { (Branch: sendTeams)
[Pipeline] { (Branch: sendWebex)
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] // parallel
[Pipeline] echo
12:54:51  Pipeline Started
[Pipeline] echo
12:54:51  {"scm":{"repo":null,"gitCommit":null},"orchestrator":{"jobName":"orchestrators-folders/pbbef/Non-Production/TERRAFORMS/aws-terraform-hs-bef-intentapi/feature-PBBEF-1571","buildNumber":"13","branchName":"feature-PBBEF-1571","node":null,"timeInPipeline":"10 sec and counting"},"epf":{"stage":"Pipeline Started","message":"Pipeline Started","userProvidedConfig":{"githubConnectionName":"github","githubCredentialsId":"GIT_TOKEN","commitStatusName":"","cloudName":"pbbef-openshift-devops1","adjudicatorEnvironment":"prod"}}}
[Pipeline] withCredentials
12:54:51  Masking supported pattern matches of $EPF_GITHUB_ACCESS_TOKEN
[Pipeline] {
[Pipeline] echo
12:54:51  Assessing changed files...
[Pipeline] httpRequest
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] echo
12:54:51  Changed files: [envs/dev-candidate/backend.config, envs/dev-candidate/dev-candidate.tfvars]
[Pipeline] echo
12:54:52  checkoutConfiguration.repo.shallow: false
[Pipeline] echo
12:54:52  moduleToRun is obtained from default modules for 'common:cnp-preflight-check-git-settings:null'
[Pipeline] echo
12:54:52  ========== MODULE INFO ==========
12:54:52  Name: cnp-preflight-check-git-settings
12:54:52  Contract: PREFLIGHT_CHECK
12:54:52  Command: cnp-preflight-check-git-settings.sh
12:54:52  Subcommand: 
12:54:52  Docker Image: registry-dev.cigna.com/cnp/cnp-docker-core:1.1.8
12:54:52  Required Credentials:[{"type":"string", "id":"GIT_TOKEN"}]
12:54:52  =======================================
[Pipeline] echo
12:54:52  Accumulating pod template requirements for Module(common: PREFLIGHT_CHECK dev) : registry-dev.cigna.com/cnp/cnp-docker-core:1.1.8(cnp-docker-corev118)
[Pipeline] echo
12:54:52  moduleToRun is obtained from default modules for 'quality:cnp-quality-profile-checkmarx:scan'
[Pipeline] echo
12:54:52  ========== MODULE INFO ==========
12:54:52  Name: cnp-quality-profile-checkmarx
12:54:52  Contract: SECURITY_SCAN
12:54:52  Command: cnp-quality-profile-checkmarx.sh
12:54:52  Subcommand: scan
12:54:52  Docker Image: registry-dev.cigna.com/cnp/cnp-docker-maven-java8:1.2.8
12:54:52  Required Credentials:[{"type":"usernamePassword", "id":"bef_checkmarx", "prefix":"CX"}]
12:54:52  =======================================
[Pipeline] echo
12:54:52  Accumulating pod template requirements for Module(quality: scan dev) : registry-dev.cigna.com/cnp/cnp-docker-maven-java8:1.2.8(cnp-docker-maven-java8v128)
[Pipeline] echo
12:54:52  Accumulating pod template requirements for Linting([approvalrequest]) : :(jnlp)
[Pipeline] echo
12:54:52  moduleToRun is obtained by parsing [moduleType:terraform, branchPattern:^(develop|release|hotfix|feature).*, module:[contractName:Plan Dev Candidate, commandName:cnp-deploy-terraform-aws.sh, subCommand:plan, image:registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2, moduleName:cnp-deploy-terraform-aws, sdlcEnvironment:dev-candidate], args:[credentials:[[id:DAWS-HS-UPSILONFRIES, env:dev, type:string]], configDir:envs/dev-candidate, env:dev, awsAccountId:364685145795, awsUsername:DAWS-HS-UPSILONFRIES, awsRoleName:DEPLOYER, tfVersion:1.4.6, tfDir:], container:[memory:2000], phaseCache:false, stashIncludePattern:, stashExcludePattern:, resourceStrategy:, resourceScaleFactor:4, cloudName:pbbef-openshift-devops1, checkmarxEnabled:true, sonarEnabled:true, phaseInstance:com.cigna.modules.Module@26961545, phaseLabel:Phase 3, isStashEnabled:true, sdlcEnvironment:Undefined]
[Pipeline] echo
12:54:52  ========== MODULE INFO ==========
12:54:52  Name: cnp-deploy-terraform-aws
12:54:52  Contract: Plan Dev Candidate
12:54:52  Command: cnp-deploy-terraform-aws.sh
12:54:52  Subcommand: plan
12:54:52  Docker Image: registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2
12:54:52  Required Credentials:[{"type":"string", "id":"DAWS-HS-UPSILONFRIES", "env":"dev"}]
12:54:52  =======================================
[Pipeline] echo
12:54:52  Accumulating pod template requirements for Module(terraform: plan) : registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2(cnp-docker-terraformv100-dev-ov2)
[Pipeline] echo
12:54:52  Pipeline starting with 4 phases, running in 1 cloud
[Pipeline] echo
12:54:52  ================================================== EXECUTION PLAN ==================================================
12:54:52  Processing pod groups in this order: [pbbef-openshift-devops1]
12:54:52      PHASE GROUP 0: pbbef-openshift-devops1 # PHASES 4
12:54:52        PHASE 0 [Module(common: PREFLIGHT_CHECK dev)](pbbef-openshift-devops1):
12:54:52          -> container jnlp, cpu: 500m, memory: 600Mi
12:54:52          -> container cnp-docker-corev118, cpu: 500m, memory: 1000Mi
12:54:52        PHASE 1 [Module(quality: scan dev)](pbbef-openshift-devops1):
12:54:52          -> container jnlp, cpu: 500m, memory: 600Mi
12:54:52          -> container cnp-docker-maven-java8v128, cpu: 500m, memory: 1000Mi
12:54:52        PHASE 2 [Linting([approvalrequest])](pbbef-openshift-devops1):
12:54:52          -> container jnlp, cpu: 500m, memory: 600Mi
12:54:52        PHASE 3 [Module(terraform: plan)](pbbef-openshift-devops1):
12:54:52          -> container jnlp, cpu: 500m, memory: 600Mi
12:54:52          -> container cnp-docker-terraformv100-dev-ov2, cpu: 500m, memory: 2000Mi
12:54:52  ====================================================================================================================
[Pipeline] echo
12:54:52  Creating base pod 'epf-orchestrators-folders-aws-terraform-hs-bef-inten-e7844' for pod group 'pbbef-openshift-devops1' on cloud 'pbbef-openshift-devops1'
[Pipeline] ansiColor
[Pipeline] {
12:54:52  
[Pipeline] echo
12:54:52  
12:54:52  		******************************************************
12:54:52  		               Pod's Resource Utilization
12:54:52  
12:54:52  		     Total CPU Request:		876m (millicores)
12:54:52  		     Total CPU Limit:		2100m (millicores)
12:54:52  		     Total Memory Request:	1601Mi (Mebibytes)
12:54:52  		     Total Memory Limit:	4850Mi (Mebibytes)
12:54:52  
12:54:52  		******************************************************
12:54:52          
[Pipeline] }
12:54:52  
[Pipeline] // ansiColor
[Pipeline] podTemplate
[Pipeline] {
[Pipeline] node
12:54:58  Created Pod: pbbef-openshift-devops1 pbbef-openshift-devops1/epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w
12:55:06  Agent epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w is provisioned from template epf-orchestrators-folders-aws-terraform-hs-bef-inten-e7844-jd49k
12:55:06  ---
12:55:06  apiVersion: "v1"
12:55:06  kind: "Pod"
12:55:06  metadata:
12:55:06    annotations:
12:55:06      epf_branch: "feature-PBBEF-1571"
12:55:06      kubernetes.jenkins.io/last-refresh: "1739382897895"
12:55:06      buildUrl: "https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Non-Production/job/TERRAFORMS/job/aws-terraform-hs-bef-intentapi/job/feature-PBBEF-1571/13/"
12:55:06      runUrl: "job/orchestrators-folders/job/pbbef/job/Non-Production/job/TERRAFORMS/job/aws-terraform-hs-bef-intentapi/job/feature-PBBEF-1571/13/"
12:55:06    labels:
12:55:06      kind: "jenkins"
12:55:06      source: "epf"
12:55:06      epf_pod_group: "aws-terraform-hs-bef-intentapi.pbbef-openshift-devops1"
12:55:06      jenkins: "slave"
12:55:06      jenkins/label-digest: "c0d0d7532c7fbe398185e5af432c00fe78000c1c"
12:55:06      jenkins/label: "pf-orchestrators-folders-aws-terraform-hs-bef-inten-e7844"
12:55:06      kubernetes.jenkins.io/controller: "https___orchestrator24_orchestrator-v2_sys_cigna_comx"
12:55:06      cloudbees.com/master: "orchestrator24"
12:55:06    name: "epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w"
12:55:06    namespace: "pbbef-openshift-devops1"
12:55:06  spec:
12:55:06    affinity:
12:55:06      podAntiAffinity:
12:55:06        preferredDuringSchedulingIgnoredDuringExecution:
12:55:06        - podAffinityTerm:
12:55:06            labelSelector:
12:55:06              matchExpressions:
12:55:06              - key: "com.cloudbees.cje.type"
12:55:06                operator: "In"
12:55:06                values:
12:55:06                - "master"
12:55:06                - "cjoc"
12:55:06            topologyKey: "kubernetes.io/hostname"
12:55:06          weight: 1
12:55:06    containers:
12:55:06    - command:
12:55:06      - "/bin/sh"
12:55:06      - "-c"
12:55:06      - "umask 0000; jenkins-agent"
12:55:06      env:
12:55:06      - name: "JENKINS_SECRET"
12:55:06        value: "********"
12:55:06      - name: "JENKINS_AGENT_NAME"
12:55:06        value: "epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w"
12:55:06      - name: "JENKINS_WEB_SOCKET"
12:55:06        value: "true"
12:55:06      - name: "REMOTING_OPTS"
12:55:06        value: "-noReconnectAfter 1d"
12:55:06      - name: "JENKINS_NAME"
12:55:06        value: "epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w"
12:55:06      - name: "JENKINS_AGENT_WORKDIR"
12:55:06        value: "/home/jenkins/agent -internalDir remoting-c19ad1"
12:55:06      - name: "JENKINS_URL"
12:55:06        value: "https://orchestrator24.orchestrator-v2.sys.cigna.com/"
12:55:06      image: "registry.cigna.com/enterprise-devops/conduit-jnlp:cloudbees-2.462.1.3"
12:55:06      imagePullPolicy: "Always"
12:55:06      name: "jnlp"
12:55:06      resources:
12:55:06        limits:
12:55:06          cpu: "500m"
12:55:06          memory: "600Mi"
12:55:06        requests:
12:55:06          cpu: "500m"
12:55:06          memory: "600Mi"
12:55:06      tty: true
12:55:06      volumeMounts:
12:55:06      - mountPath: "/home/jenkins/agent/sonar"
12:55:06        name: "sonar-workspace"
12:55:06      - mountPath: "/home/jenkins/agent/setup-sonar"
12:55:06        name: "setup-sonar"
12:55:06      - mountPath: "/home/jenkins/agent"
12:55:06        name: "workspace-volume"
12:55:06        readOnly: false
12:55:06      workingDir: "/home/jenkins/agent"
12:55:06    - command:
12:55:06      - "sh"
12:55:06      - "-c"
12:55:06      - "trap \"exit\" TERM; while [ 1 ]; do sleep 60 & wait $!; done;"
12:55:06      image: "registry-dev.cigna.com/cnp/cnp-docker-core:1.1.8"
12:55:06      imagePullPolicy: "Always"
12:55:06      name: "cnp-docker-corev118"
12:55:06      resources:
12:55:06        limits:
12:55:06          cpu: "500m"
12:55:06          memory: "1000Mi"
12:55:06        requests:
12:55:06          cpu: "125m"
12:55:06          memory: "250Mi"
12:55:06      tty: true
12:55:06      volumeMounts:
12:55:06      - mountPath: "/home/jenkins/agent"
12:55:06        name: "workspace-volume"
12:55:06        readOnly: false
12:55:06      workingDir: "/home/jenkins/agent"
12:55:06    - command:
12:55:06      - "sh"
12:55:06      - "-c"
12:55:06      - "trap \"exit\" TERM; while [ 1 ]; do sleep 60 & wait $!; done;"
12:55:06      image: "registry-dev.cigna.com/cnp/cnp-docker-maven-java8:1.2.8"
12:55:06      imagePullPolicy: "Always"
12:55:06      name: "cnp-docker-maven-java8v128"
12:55:06      resources:
12:55:06        limits:
12:55:06          cpu: "500m"
12:55:06          memory: "1000Mi"
12:55:06        requests:
12:55:06          cpu: "125m"
12:55:06          memory: "250Mi"
12:55:06      tty: true
12:55:06      volumeMounts:
12:55:06      - mountPath: "/home/jenkins/agent"
12:55:06        name: "workspace-volume"
12:55:06        readOnly: false
12:55:06      workingDir: "/home/jenkins/agent"
12:55:06    - command:
12:55:06      - "sh"
12:55:06      - "-c"
12:55:06      - "trap \"exit\" TERM; while [ 1 ]; do sleep 60 & wait $!; done;"
12:55:06      image: "registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2"
12:55:06      imagePullPolicy: "Always"
12:55:06      name: "cnp-docker-terraformv100-dev-ov2"
12:55:06      resources:
12:55:06        limits:
12:55:06          cpu: "500m"
12:55:06          memory: "2000Mi"
12:55:06        requests:
12:55:06          cpu: "125m"
12:55:06          memory: "500Mi"
12:55:06      tty: true
12:55:06      volumeMounts:
12:55:06      - mountPath: "/home/jenkins/agent"
12:55:06        name: "workspace-volume"
12:55:06        readOnly: false
12:55:06      workingDir: "/home/jenkins/agent"
12:55:06    - command:
12:55:06      - "sh"
12:55:06      - "-c"
12:55:06      - "trap \"exit\" TERM; while [ 1 ]; do sleep 60 & wait $!; done;"
12:55:06      image: "registry.cigna.com/enterprise-devops/epf-curl:latest"
12:55:06      imagePullPolicy: "Always"
12:55:06      name: "epf-curlvlatest"
12:55:06      resources:
12:55:06        limits:
12:55:06          cpu: "100m"
12:55:06          memory: "250Mi"
12:55:06        requests:
12:55:06          cpu: "1m"
12:55:06          memory: "1Mi"
12:55:06      tty: true
12:55:06      volumeMounts:
12:55:06      - mountPath: "/home/jenkins/agent"
12:55:06        name: "workspace-volume"
12:55:06        readOnly: false
12:55:06      workingDir: "/home/jenkins/agent"
12:55:06    enableServiceLinks: false
12:55:06    nodeSelector:
12:55:06      beta.kubernetes.io/os: "linux"
12:55:06    restartPolicy: "Never"
12:55:06    securityContext: {}
12:55:06    serviceAccountName: ""
12:55:06    volumes:
12:55:06    - emptyDir:
12:55:06        medium: ""
12:55:06      name: "ecr-creds"
12:55:06    - emptyDir:
12:55:06        medium: ""
12:55:06      name: "sonar-workspace"
12:55:06    - emptyDir:
12:55:06        medium: "Memory"
12:55:06      name: "workspace-volume"
12:55:06    - emptyDir:
12:55:06        medium: ""
12:55:06      name: "aws-creds"
12:55:06    - emptyDir:
12:55:06        medium: ""
12:55:06      name: "setup-sonar"
12:55:06  
12:55:10  Running on epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] dir
12:55:10  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] stage
[Pipeline] { (SCM Checkout)
[Pipeline] container
[Pipeline] {
[Pipeline] fileExists
[Pipeline] dir
12:55:10  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] echo
12:55:10  Branch going to checkout: [feature-PBBEF-1571] : [[$class:CloneOption, shallow:false, noTags:true], GitSCMSourceDefaults{includeTags=false}, hudson.plugins.git.extensions.impl.BuildChooserSetting@7b9ab761]
[Pipeline] checkout
12:55:10  The recommended git tool is: NONE
12:55:17  using credential SVPDEVOP-CIG-CLONEB_UserPw
12:55:17  Warning: JENKINS-30600: special launcher org.csanchez.jenkins.plugins.kubernetes.pipeline.ContainerExecDecorator$1@2384dac3; decorates RemoteLauncher[hudson.remoting.Channel@63f45a2f:epf-orchestrators-folders-aws-terraform-hs-bef-inten-e784-pst6w] will be ignored (a typical symptom is the Git executable not being run inside a designated container)
12:55:17  Cloning the remote Git repository
12:55:17  Avoid fetching tags
12:55:17  Cloning with configured refspecs honoured and without tags
12:55:21  Cloning repository https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git
12:55:22   > git init /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571 # timeout=10
12:55:22  Fetching upstream changes from https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git
12:55:22   > git --version # timeout=10
12:55:22   > git --version # 'git version 2.43.5'
12:55:22  using GIT_ASKPASS to set credentials This is the enterprise Health Services GitHub credentials for Jenkins
12:55:22   > git fetch --no-tags --force --progress -- https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git +refs/heads/feature-PBBEF-1571:refs/remotes/origin/feature-PBBEF-1571 # timeout=10
12:55:24  Avoid second fetch
12:55:24  Checking out Revision 404bbc05e2025db132341608bc16599b33be8d6a (feature-PBBEF-1571)
12:55:23   > git config remote.origin.url https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git # timeout=10
12:55:23   > git config --add remote.origin.fetch +refs/heads/feature-PBBEF-1571:refs/remotes/origin/feature-PBBEF-1571 # timeout=10
12:55:24   > git config core.sparsecheckout # timeout=10
12:55:24   > git checkout -f 404bbc05e2025db132341608bc16599b33be8d6a # timeout=10
12:55:25  Commit message: "Resolving build errors"
12:55:25   > git rev-list --no-walk 43d95498ac275359c27a88f9f004f2f9f0c6c335 # timeout=10
[Pipeline] echo
12:55:26  Branch checked out: feature-PBBEF-1571
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // container
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
12:55:26  Starting pod group 'pbbef-openshift-devops1' with 4 phases
[Pipeline] withEnv
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
12:55:26  
[Pipeline] echo
12:55:26  ---> START PHASE 'Module'
[Pipeline] echo
12:55:26  Switching to container 'cnp-docker-corev118'
[Pipeline] container
[Pipeline] {
[Pipeline] echo
12:55:26  Credential : [@string(credentialsId=GIT_TOKEN,variable=CNP_PREFLIGHT_CHECK_GIT_SETTINGS_MODULE_TOKEN), @string(credentialsId=GIT_TOKEN,variable=CNP_PREFLIGHT_CHECK_GIT_SETTINGS_TOKEN)]
[Pipeline] echo
12:55:26  Jira Scanning - DISABLED
[Pipeline] echo
12:55:26  CNP_XLR_TEMPLATE_URL is configured to https://xlrelease.express-scripts.com/api/v1/templates/Applications/templates/Folder2a9c42e13b784e8fbb57c559852b807c/Release47c3527db6944b918488c5c90166c4b0/start
[Pipeline] echo
12:55:26  setting CNP_CALLBACK_JOB to https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/XLRCallbackHandler/
[Pipeline] echo
12:55:26  setting CNP_CANDIDATE_JOB to orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/CandidateDeployer
[Pipeline] stage
[Pipeline] { (common: PREFLIGHT_CHECK dev)
[Pipeline] echo
12:55:26  Switching to container 'cnp-docker-corev118'
[Pipeline] container
[Pipeline] {
[Pipeline] withCredentials
12:55:26  Masking supported pattern matches of $CNP_PREFLIGHT_CHECK_GIT_SETTINGS_MODULE_TOKEN or $CNP_PREFLIGHT_CHECK_GIT_SETTINGS_TOKEN
[Pipeline] {
[Pipeline] configFileProvider
12:55:27  provisioning config files...
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
12:55:27  Phase caching is disabled, not stashing files.
[Pipeline] dir
12:55:27  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] echo
12:55:27  ---> START MODULE (PREFLIGHT_CHECK:cnp-preflight-check-git-settings)
[Pipeline] sh
12:55:27  + cnp-preflight-check-git-settings.sh {"Release_JenkinsMaster":"orchestrator24.orchestrator-v2.sys.cigna.com","Release_BuildUri":"https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Non-Production/job/TERRAFORMS/job/aws-terraform-hs-bef-intentapi/job/feature-PBBEF-1571/13/","Release_rollbackDeploymentPackagePath":"","branchName":"feature-PBBEF-1571","repoUrl":"https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git","commitId":"404bbc05e2025db132341608bc16599b33be8d6a"}
12:55:27  
12:55:27  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:55:27  
12:55:27  Package: cnp-preflight-check-git-settings
12:55:27  Version: 0.4.1
12:55:27  Status: install ok installed
12:55:27  Priority: optional
12:55:27  Maintainer: Software Engineering Excellence
12:55:27  Installed-Size: unknown
12:55:27  Depends: cnp-util-core, git
12:55:27  Download-Size: unknown
12:55:27  APT-Manual-Installed: yes
12:55:27  APT-Sources: /var/lib/dpkg/status
12:55:27  Description: Verifies that branch protection rules have been set on Git Repo.
12:55:27  
12:55:27  cnp-preflight-check-git-settings checking config of remote Url: https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git
12:55:27  2025/02/12 17:55:27 CNP_PREFLIGHT_CHECK_GIT_SETTINGS version 0.0.6
12:55:27  2025/02/12 17:55:27 ****
12:55:27  2025/02/12 17:55:27 Parsing URL
12:55:27  2025/02/12 17:55:27 https://git.express-scripts.com, ExpressScripts
12:55:27  2025/02/12 17:55:27 {"query":"{ repository(owner: \"ExpressScripts\", name: \"aws-terraform-hs-bef-intentapi\") { defaultBranchRef { name } branchProtectionRules(first: 100) {nodes {pattern isAdminEnforced dismissesStaleReviews requiresApprovingReviews restrictsPushes}}}}","variables":{}}
12:55:27  2025/02/12 17:55:27 https://git.express-scripts.com/api/graphql
12:55:27  2025/02/12 17:55:27 200
12:55:27  2025/02/12 17:55:27 Logging HTTP Response:
12:55:27  2025/02/12 17:55:27 {"data":{"repository":{"defaultBranchRef":{"name":"develop"},"branchProtectionRules":{"nodes":[{"pattern":"master","isAdminEnforced":false,"dismissesStaleReviews":false,"requiresApprovingReviews":false,"restrictsPushes":true},{"pattern":"develop","isAdminEnforced":false,"dismissesStaleReviews":true,"requiresApprovingReviews":true,"restrictsPushes":true}]}}}}
12:55:27  2025/02/12 17:55:27 Validating git repository:
12:55:27  2025/02/12 17:55:27 Default branch is set to: develop
12:55:27  master
12:55:27  Verifying Master/Main Branch
12:55:27  2025/02/12 17:55:27 Master/Main branch is valid
12:55:27  develop
12:55:27  Verifying Develop Branch
12:55:27  2025/02/12 17:55:27 Develop branch is valid.
12:55:27  2025/02/12 17:55:27 master/main valid: true, develop valid: true
12:55:27  
12:55:27  Preflight check git settings successful
[Pipeline] fileExists
[Pipeline] echo
12:55:28  File cnp-preflight-check-git-settings-results.json not found
[Pipeline] echo
12:55:28  ---> END MODULE (PREFLIGHT_CHECK:cnp-preflight-check-git-settings)
[Pipeline] }
[Pipeline] // dir
[Pipeline] echo
12:55:28  Phase caching is disabled, not stashing files.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // configFileProvider
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // container
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // container
[Pipeline] echo
12:55:28  <--- END PHASE 'Module'
[Pipeline] }
12:55:28  
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withEnv
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
12:55:28  
[Pipeline] echo
12:55:28  ---> START PHASE 'Module'
[Pipeline] echo
12:55:28  Switching to container 'cnp-docker-maven-java8v128'
[Pipeline] container
[Pipeline] {
[Pipeline] echo
12:55:28  Credential : [@usernamePassword(credentialsId=bef_checkmarx,passwordVariable=CNP_QUALITY_PROFILE_CHECKMARX_CX_MODULE_PASSWORD,usernameVariable=CNP_QUALITY_PROFILE_CHECKMARX_CX_MODULE_USER), @usernamePassword(credentialsId=bef_checkmarx,passwordVariable=CNP_QUALITY_PROFILE_CHECKMARX_CX_CRED,usernameVariable=CNP_QUALITY_PROFILE_CHECKMARX_CX_USER)]
[Pipeline] echo
12:55:28  Jira Scanning - DISABLED
[Pipeline] echo
12:55:28  CNP_XLR_TEMPLATE_URL is configured to https://xlrelease.express-scripts.com/api/v1/templates/Applications/templates/Folder2a9c42e13b784e8fbb57c559852b807c/Release47c3527db6944b918488c5c90166c4b0/start
[Pipeline] echo
12:55:28  setting CNP_CALLBACK_JOB to https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/XLRCallbackHandler/
[Pipeline] echo
12:55:28  setting CNP_CANDIDATE_JOB to orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/CandidateDeployer
[Pipeline] stage
[Pipeline] { (quality: scan dev)
[Pipeline] echo
12:55:28  Switching to container 'cnp-docker-maven-java8v128'
[Pipeline] container
[Pipeline] {
[Pipeline] withCredentials
12:55:28  Masking supported pattern matches of $CNP_QUALITY_PROFILE_CHECKMARX_CX_MODULE_PASSWORD or $CNP_QUALITY_PROFILE_CHECKMARX_CX_CRED
[Pipeline] {
[Pipeline] configFileProvider
12:55:28  provisioning config files...
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
12:55:29  Phase caching is disabled, not stashing files.
[Pipeline] dir
12:55:29  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] echo
12:55:29  ---> START MODULE (SECURITY_SCAN:cnp-quality-profile-checkmarx)
[Pipeline] sh
12:55:29  + cnp-quality-profile-checkmarx.sh scan {"cxPreset":36,"projectName":"aws-terraform-hs-bef-intentapi","cxProductionBranch":"master","teamName":"BEF","cxIncremental":true,"cxExcludeFolders":".git,.gitignore","Release_JenkinsMaster":"orchestrator24.orchestrator-v2.sys.cigna.com","Release_BuildUri":"https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Non-Production/job/TERRAFORMS/job/aws-terraform-hs-bef-intentapi/job/feature-PBBEF-1571/13/","Release_rollbackDeploymentPackagePath":"","branchName":"feature-PBBEF-1571","repoUrl":"https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git","commitId":"404bbc05e2025db132341608bc16599b33be8d6a"}
12:55:29  
12:55:29  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:55:29  
12:55:29  Package: cnp-quality-profile-checkmarx
12:55:29  Version: 0.0.10
12:55:29  Status: install ok installed
12:55:29  Priority: optional
12:55:29  Maintainer: Evernorth Software Engineering Excellence
12:55:29  Installed-Size: unknown
12:55:29  Depends: unzip
12:55:29  Download-Size: unknown
12:55:29  APT-Manual-Installed: yes
12:55:29  APT-Sources: /var/lib/dpkg/status
12:55:29  Description: Package includes checkmarx command line api scripts for CxSAST scans.
12:55:29  
12:55:29  
12:55:29  
12:55:29  Setting variable cxExcludeFolders with value '.git,.gitignore'
12:55:30  Setting variable cxIncremental with value 'true'
12:55:30  Setting variable cxPreset with value '36'
12:55:30  Setting variable cxProductionBranch with value 'master'
12:55:31  Setting variable projectName with value 'aws-terraform-hs-bef-intentapi'
12:55:31  Setting variable teamName with value 'BEF'
12:55:31  [WARNING] You've set [ cxExcludeFolders ]. This parameter is being deprecated with the Enterprise Checkmarx migration and will be removed in a subsequent version.
12:55:31  [WARNING] You've set [ cxIncremental ]. This parameter is being deprecated with the Enterprise Checkmarx migration and will be removed in a subsequent version.
12:55:31  [WARNING] You've set [ cxPreset ]. This parameter is being deprecated with the Enterprise Checkmarx migration and will be removed in a subsequent version.
12:55:31  Checkmarx Team Name: BEF
12:55:31  cxServer: https://cigna.checkmarx.net
12:55:31  Mapping Preset
12:55:31  Vulnerability thresholds enabled
12:55:31  Python3 not installed
12:55:31  DSO_IS_INSTALLED: false
12:55:31  Team Path: CxServer/Cigna
12:55:31  Project Name: CxServer/Cigna/BEF/aws-terraform-hs-bef-intentapi
12:55:31  CxUser: bef_api
12:55:31  locationpath: .
12:55:31  Preset: Checkmarx Default
12:55:31  Comment: 'EPF Module: cnp-quality-profile-checkmarx'
12:55:31  Config file location: /usr/local/etc/cx_console.properties
12:55:31  Optional Keys: -Incremental -LocationFilesExclude !**/*.3g2,!**/*.3gp,!**/*.7z,!**/*.DS_Store,!**/*.aac,!**/*.ahtm,!**/*.ahtml,!**/*.aif,!**/*.asf,!**/*.asx,!**/*.avi,!**/*.bak,!**/*.bin,!**/*.bmp,!**/*.class,!**/*.csv,!**/*.dll,!**/*.doc*,!**/*.dot*,!**/*.emf,!**/*.exe,!**/*.fhtml,!**/*.flv,!**/*.gif,!**/*.gz,!**/*.hdm,!**/*.hdml,!**/*.hsql,!**/*.ht,!**/*.hta,!**/*.htc,!**/*.htd,!**/*.htmls,!**/*.iff,!**/*.ihtml,!**/*.iml,!**/*.ipr,!**/*.iws,!**/*.jar,!**/*.jpg,!**/*.log,!**/*.m3u,!**/*.mht*,!**/*.mid,!**/*.mov,!**/*.mp3,!**/*.mp4,!**/*.mpa,!**/*.mpg,!**/*.nuget.props,!**/*.nuget.targets,!**/*.nupkg,!**/*.odp,!**/*.ods,!**/*.odt,!**/*.pdb,!**/*.pdf,!**/*.png,!**/*.pot*,!**/*.ppa*,!**/*.pps*,!**/*.ppt*,!**/*.psd,!**/*.ra,!**/*.rar,!**/*.rm,!**/*.slk,!**/*.snupkg,!**/*.ssi,!**/*.stm*,!**/*.swf,!**/*.tar,!**/*.tar.gz,!**/*.thmx,!**/*.tif,!**/*.tmp,!**/*.ttml,!**/*.txn,!**/*.vob,!**/*.vscode,!**/*.wav,!**/*.wma,!**/*.wmv,!**/*.xla*,!**/*.xls*,!**/*.xlt*,!**/*.xlw,!**/*.zip,!**/Checkmarx/Reports/*.*,!**/node_modules/*.* -LocationPathExclude _cvs,.svn,.hg,.git,.bzr,bin,obj,backup,node_modules,.git,.gitignore 
12:55:31  Working directory: /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
12:55:34  [2025-02-12T17:55:33,677 INFO ] -----------------------------------------------------------------------------------------
12:55:34  [2025-02-12T17:55:33,688 INFO ] CxConsole Configuration: 
12:55:34  [2025-02-12T17:55:33,689 INFO ] --------------------
12:55:34  [2025-02-12T17:55:33,788 INFO ] plugin version: 1.1.33
12:55:34  [2025-02-12T17:55:33,789 INFO ] verbose: true
12:55:34  [2025-02-12T17:55:33,789 INFO ] cxserver: https://cigna.checkmarx.net
12:55:34  [2025-02-12T17:55:33,866 INFO ] cxuser: 6812ed0a977bd7b67ccaee325fe9ae2b0edc25dcb7d0e0d34a63a281e1506452
12:55:34  [2025-02-12T17:55:33,867 INFO ] cxpassword: ********
12:55:34  [2025-02-12T17:55:33,867 INFO ] projectname: CxServer/Cigna/BEF/aws-terraform-hs-bef-intentapi
12:55:34  [2025-02-12T17:55:33,867 INFO ] locationtype: folder
12:55:34  [2025-02-12T17:55:33,867 INFO ] locationpath: /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571/.
12:55:34  [2025-02-12T17:55:33,868 INFO ] comment: 'EPF Module: cnp-quality-profile-checkmarx'
12:55:34  [2025-02-12T17:55:33,868 INFO ] config: /usr/local/etc/cx_console.properties
12:55:34  [2025-02-12T17:55:33,868 INFO ] preset: Checkmarx Default
12:55:34  [2025-02-12T17:55:33,868 INFO ] enablesca: true
12:55:34  [2025-02-12T17:55:33,868 INFO ] scaaccount: Cigna
12:55:34  [2025-02-12T17:55:33,868 INFO ] cxsasturl: https://cigna.checkmarx.net
12:55:34  [2025-02-12T17:55:33,868 INFO ] scaaccesscontrolurl: https://cigna.checkmarx.net/CxRestAPI/auth/
12:55:34  [2025-02-12T17:55:33,869 INFO ] scausername: 6812ed0a977bd7b67ccaee325fe9ae2b0edc25dcb7d0e0d34a63a281e1506452
12:55:34  [2025-02-12T17:55:33,869 INFO ] scapassword: ********
12:55:34  [2025-02-12T17:55:33,869 INFO ] scafilesexclude: !**/*.3g2,!**/*.3gp,!**/*.7z,!**/*.DS_Store,!**/*.aac,!**/*.ahtm,!**/*.ahtml,!**/*.aif,!**/*.asf,!**/*.asx,!**/*.avi,!**/*.bak,!**/*.bin,!**/*.bmp,!**/*.class,!**/*.csv,!**/*.dll,!**/*.doc*,!**/*.dot*,!**/*.emf,!**/*.exe,!**/*.fhtml,!**/*.flv,!**/*.gif,!**/*.gz,!**/*.hdm,!**/*.hdml,!**/*.hsql,!**/*.ht,!**/*.hta,!**/*.htc,!**/*.htd,!**/*.htmls,!**/*.iff,!**/*.ihtml,!**/*.iml,!**/*.ipr,!**/*.iws,!**/*.jar,!**/*.jpg,!**/*.log,!**/*.m3u,!**/*.mht*,!**/*.mid,!**/*.mov,!**/*.mp3,!**/*.mp4,!**/*.mpa,!**/*.mpg,!**/*.nuget.props,!**/*.nuget.targets,!**/*.nupkg,!**/*.odp,!**/*.ods,!**/*.odt,!**/*.pdb,!**/*.pdf,!**/*.png,!**/*.pot*,!**/*.ppa*,!**/*.pps*,!**/*.ppt*,!**/*.psd,!**/*.ra,!**/*.rar,!**/*.rm,!**/*.slk,!**/*.snupkg,!**/*.ssi,!**/*.stm*,!**/*.swf,!**/*.tar,!**/*.tar.gz,!**/*.thmx,!**/*.tif,!**/*.tmp,!**/*.ttml,!**/*.txn,!**/*.vob,!**/*.vscode,!**/*.wav,!**/*.wma,!**/*.wmv,!**/*.xla*,!**/*.xls*,!**/*.xlt*,!**/*.xlw,!**/*.zip,!**/Checkmarx/Reports/*.*,!**/node_modules/*.*
12:55:34  [2025-02-12T17:55:33,869 INFO ] scapathexclude: _cvs,.svn,.hg,.git,.bzr,bin,obj,backup,node_modules,.git,.gitignore
12:55:34  [2025-02-12T17:55:33,870 INFO ] incremental: true
12:55:34  [2025-02-12T17:55:33,870 INFO ] locationfilesexclude: !**/*.3g2,!**/*.3gp,!**/*.7z,!**/*.DS_Store,!**/*.aac,!**/*.ahtm,!**/*.ahtml,!**/*.aif,!**/*.asf,!**/*.asx,!**/*.avi,!**/*.bak,!**/*.bin,!**/*.bmp,!**/*.class,!**/*.csv,!**/*.dll,!**/*.doc*,!**/*.dot*,!**/*.emf,!**/*.exe,!**/*.fhtml,!**/*.flv,!**/*.gif,!**/*.gz,!**/*.hdm,!**/*.hdml,!**/*.hsql,!**/*.ht,!**/*.hta,!**/*.htc,!**/*.htd,!**/*.htmls,!**/*.iff,!**/*.ihtml,!**/*.iml,!**/*.ipr,!**/*.iws,!**/*.jar,!**/*.jpg,!**/*.log,!**/*.m3u,!**/*.mht*,!**/*.mid,!**/*.mov,!**/*.mp3,!**/*.mp4,!**/*.mpa,!**/*.mpg,!**/*.nuget.props,!**/*.nuget.targets,!**/*.nupkg,!**/*.odp,!**/*.ods,!**/*.odt,!**/*.pdb,!**/*.pdf,!**/*.png,!**/*.pot*,!**/*.ppa*,!**/*.pps*,!**/*.ppt*,!**/*.psd,!**/*.ra,!**/*.rar,!**/*.rm,!**/*.slk,!**/*.snupkg,!**/*.ssi,!**/*.stm*,!**/*.swf,!**/*.tar,!**/*.tar.gz,!**/*.thmx,!**/*.tif,!**/*.tmp,!**/*.ttml,!**/*.txn,!**/*.vob,!**/*.vscode,!**/*.wav,!**/*.wma,!**/*.wmv,!**/*.xla*,!**/*.xls*,!**/*.xlt*,!**/*.xlw,!**/*.zip,!**/Checkmarx/Reports/*.*,!**/node_modules/*.*
12:55:34  [2025-02-12T17:55:33,870 INFO ] locationpathexclude: _cvs,.svn,.hg,.git,.bzr,bin,obj,backup,node_modules,.git,.gitignore
12:55:34  [2025-02-12T17:55:33,870 INFO ] --------------------
12:55:34  
12:55:34  
12:55:34  [2025-02-12T17:55:33,872 INFO ] Config file location: /usr/local/etc/cx_console.properties
12:55:35  [2025-02-12T17:55:35,174 INFO ] Initializing Cx client [2024.3.26]
12:55:36  [2025-02-12T17:55:36,165 INFO ] Checkmarx server version [9.6.0.181]. Hotfix [16].
12:55:36  [2025-02-12T17:55:36,165 INFO ] Logging into the Checkmarx service.
12:55:40  [2025-02-12T17:55:39,996 INFO ] full team path: /CxServer/Cigna/BEF
12:55:40  [2025-02-12T17:55:40,300 INFO ] preset name: Checkmarx Default preset id: 36
12:55:40  [2025-02-12T17:55:40,466 INFO ] Project already exists with ID 15336
12:55:40  [2025-02-12T17:55:40,475 INFO ] Locale used in CxSAST is  en-US
12:55:40  [2025-02-12T17:55:40,476 INFO ] Logging into CxAST-SCA
12:55:46  [2025-02-12T17:55:45,604 INFO ] -----------------------------------Create CxSAST Scan:------------------------------------
12:55:46  [2025-02-12T17:55:46,223 INFO ] Uploading the zipped source code.
12:55:46  [2025-02-12T17:55:46,228 INFO ] Exclude folders converted to: '!**/_cvs/**,!**/.svn/**,!**/.hg/**,!**/.git/**,!**/.bzr/**,!**/bin/**,!**/obj/**,!**/backup/**,!**/node_modules/**,!**/_cvs/**,!**/.svn/**,!**/.hg/**,!**/.git/**,!**/.bzr/**,!**/bin/**,!**/obj/**,!**/backup/**,!**/node_modules/**,!**/.git/**,!**/.gitignore/**,'
12:55:46  [2025-02-12T17:55:46,482 INFO ] Uploading zip file
12:55:47  [2025-02-12T17:55:47,528 INFO ] SAST scan created successfully: Scan ID is 2591693
12:55:47  [2025-02-12T17:55:47,528 INFO ] ----------------------------------- Initiating CxAST-SCA Scan:------------------------------------
12:55:47  [2025-02-12T17:55:47,528 INFO ] Getting project by name: 'aws-terraform-hs-bef-intentapi'
12:55:47  [2025-02-12T17:55:47,528 INFO ] Getting project ID by name: 'aws-terraform-hs-bef-intentapi'
12:55:48  [2025-02-12T17:55:48,025 INFO ] Project ID: befdfd3a-af85-4742-aa92-3a79b4f2a642
12:55:48  [2025-02-12T17:55:48,025 INFO ] Project already exists with ID befdfd3a-af85-4742-aa92-3a79b4f2a642
12:55:48  [2025-02-12T17:55:48,115 INFO ] Team name: /CxServer/Cigna/BEF
12:55:48  [2025-02-12T17:55:48,115 INFO ] Project level custom tag name: null
12:55:48  [2025-02-12T17:55:48,287 INFO ] Resolving configuration for project: befdfd3a-af85-4742-aa92-3a79b4f2a642
12:55:48  [2025-02-12T17:55:48,516 INFO ] Got the following manifest patterns [**/package.json, **/package-lock.json, **/lerna.json, **/.npmrc, **/*.gradle, **/gradle-wrapper.properties, **/build.gradle.kts, **/*.csproj, **/*.vbproj, **/Directory.Packages.props, **/nuget.config, **/packages.config, **/pom.xml, **/settings.xml, **/build.sbt, **/requirements.txt, **/requirements-*.txt, **/requirement.txt, **/requirement-*.txt, **/*.whl, **/*.tar.gz, **/*.zip, **/packages.txt, **/yarn.lock, **/.yarnrc, **/composer.json, **/composer.lock, **/bower.json, **/.bowerrc, **/build.properties, **/plugins.sbt, **/gradle.properties, **/gradlew, **/gradlew.bat, **/gradle-wrapper.jar, **/versions.properties, **/VERSION, **/Dockerfile**, **/.env_cxsca-container-build-args, **/.env, **/Package.swift, **/Cartfile, **/Cartfile.private, **/Cartfile.resolved, **/Podfile, **/Podfile.lock, **/go.mod, **/go.sum, **/pyproject.toml, **/poetry.lock]
12:55:48  [2025-02-12T17:55:48,516 INFO ] Got the following fingerprint patterns [!**/node_modules/**, !**/bower_components/**]
12:55:48  [2025-02-12T17:55:48,516 INFO ] Using manifest only and fingerprint flow
12:55:48  [2025-02-12T17:55:48,516 INFO ] Source Directory : /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571/.
12:55:48  [2025-02-12T17:55:48,517 INFO ] Exclude folders converted to: '!**/_cvs/**,!**/.svn/**,!**/.hg/**,!**/.git/**,!**/.bzr/**,!**/bin/**,!**/obj/**,!**/backup/**,!**/node_modules/**,!**/.git/**,!**/.gitignore/**,'
12:55:48  [2025-02-12T17:55:48,568 INFO ] Started fingerprint collection on /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571/.
12:55:48  [2025-02-12T17:55:48,578 INFO ] Calculated fingerprints for 35 files
12:55:48  [2025-02-12T17:55:48,677 INFO ] Zipping ( 1 KB ): .cxsca.sig
12:55:49  [2025-02-12T17:55:49,009 INFO ] Uploading to: https://uploads.sca.checkmarx.net/source-code/d5dca5b5-05ca-40b8-8682-4559bb30b7ba/20250212-055548989_rrnmpjkc.bls
12:55:49  [2025-02-12T17:55:49,010 INFO ] Uploading the zipped data.
12:55:49  [2025-02-12T17:55:49,148 INFO ] Sending the 'start scan' request.
12:55:49  [2025-02-12T17:55:49,434 INFO ] Scan started successfully. Scan ID: d9c24bf2-060d-45f5-8a48-41a92aa29e90
12:55:49  [2025-02-12T17:55:49,435 INFO ] ------------------------------------Get CxSAST Results:-----------------------------------
12:55:49  [2025-02-12T17:55:49,435 INFO ] Waiting for CxSAST scan to finish.
12:55:59  [2025-02-12T17:55:59,570 INFO ] Waiting for SAST scan results. Elapsed time: 00:00:10.  0% processed. Status: Queued.
12:56:11  [2025-02-12T17:56:10,012 INFO ] Waiting for SAST scan results. Elapsed time: 00:00:21.  0% processed. Status: Scanning.
12:56:21  [2025-02-12T17:56:20,166 INFO ] Waiting for SAST scan results. Elapsed time: 00:00:31.  0% processed. Status: Scanning.
12:56:31  [2025-02-12T17:56:30,242 INFO ] Waiting for SAST scan results. Elapsed time: 00:00:41.  0% processed. Status: Scanning.
12:56:42  [2025-02-12T17:56:40,322 INFO ] Waiting for SAST scan results. Elapsed time: 00:00:51. 99% processed. Status: Finished.
12:56:42  [2025-02-12T17:56:40,322 INFO ] SAST scan finished successfully.
12:56:42  [2025-02-12T17:56:40,322 INFO ] Retrieving SAST scan results
12:56:42  [2025-02-12T17:56:40,405 INFO ] ----------------------------Checkmarx Scan Results(CxSAST):-------------------------------
12:56:42  [2025-02-12T17:56:40,405 INFO ] High severity results: 0
12:56:42  [2025-02-12T17:56:40,405 INFO ] Medium severity results: 11
12:56:42  [2025-02-12T17:56:40,405 INFO ] Low severity results: 7
12:56:42  [2025-02-12T17:56:40,405 INFO ] Information severity results: 0
12:56:42  [2025-02-12T17:56:40,405 INFO ] 
12:56:42  [2025-02-12T17:56:40,405 INFO ] Scan results location: https://cigna.checkmarx.net/CxWebClient/ViewerMain.aspx?scanId=2591693&ProjectID=15336
12:56:42  [2025-02-12T17:56:40,405 INFO ] ------------------------------------------------------------------------------------------
12:56:42  
12:56:42  [2025-02-12T17:56:40,406 INFO ] ------------------------------------Get CxAST-SCA Results:-----------------------------------
12:56:42  [2025-02-12T17:56:40,406 INFO ] Waiting for CxAST-SCA scan to finish
12:56:42  [2025-02-12T17:56:40,565 INFO ] Waiting for CxAST-SCA scan results. Elapsed time: 00:00:00. Status: Completed.
12:56:42  [2025-02-12T17:56:40,569 INFO ] CxAST-SCA scan finished successfully. Retrieving CxAST-SCA scan results.
12:56:42  [2025-02-12T17:56:40,790 INFO ] ----CxSCA risk report summary----
12:56:42  [2025-02-12T17:56:40,790 INFO ] Created on: 2025-02-12T17:56:05.340357Z
12:56:42  [2025-02-12T17:56:40,790 INFO ] Direct packages: 0
12:56:42  [2025-02-12T17:56:40,790 INFO ] Critical vulnerabilities: 0
12:56:42  [2025-02-12T17:56:40,790 INFO ] High vulnerabilities: 0
12:56:42  [2025-02-12T17:56:40,791 INFO ] Medium vulnerabilities: 0
12:56:42  [2025-02-12T17:56:40,791 INFO ] Low vulnerabilities: 0
12:56:42  [2025-02-12T17:56:40,791 INFO ] Scan ID: d9c24bf2-060d-45f5-8a48-41a92aa29e90
12:56:42  [2025-02-12T17:56:40,792 INFO ] Risk score: 0.00
12:56:42  [2025-02-12T17:56:40,792 INFO ] Total packages: 0
12:56:42  [2025-02-12T17:56:40,792 INFO ] Total outdated packages: 0
12:56:42  [2025-02-12T17:56:41,009 INFO ] CxAST-SCA scan results location: https://sca.checkmarx.net/#/projects/befdfd3a-af85-4742-aa92-3a79b4f2a642/reports/d9c24bf2-060d-45f5-8a48-41a92aa29e90
12:56:42  [2025-02-12T17:56:41,009 INFO ] Retrieved SCA results successfully.
12:56:42  cnp-quality-profile-checkmarx.sh scan returnCode: 0
12:56:42  
12:56:42  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:56:42  
12:56:42  Package: cnp-util-core
12:56:42  Version: 0.4.2
12:56:42  Status: install ok installed
12:56:42  Priority: optional
12:56:42  Maintainer: Evernorth Software Engineering Excellence
12:56:42  Installed-Size: unknown
12:56:42  Depends: jq
12:56:42  Download-Size: unknown
12:56:42  APT-Manual-Installed: yes
12:56:42  APT-Sources: /var/lib/dpkg/status
12:56:42  Description: Scripts and utilities for use with your cnp modules
12:56:42  
[Pipeline] fileExists
[Pipeline] readFile
[Pipeline] echo
12:56:42  {
12:56:42  "commandResult":"SUCCESS",
12:56:42  "commandOutput": {
12:56:42  }
12:56:42  }
12:56:42  
[Pipeline] sh
12:56:42  + rm cnp-quality-profile-checkmarx-results.json
[Pipeline] echo
12:56:42  ---> END MODULE (SECURITY_SCAN:cnp-quality-profile-checkmarx)
[Pipeline] }
[Pipeline] // dir
[Pipeline] echo
12:56:42  Phase caching is disabled, not stashing files.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // configFileProvider
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // container
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // container
[Pipeline] echo
12:56:42  <--- END PHASE 'Module'
[Pipeline] }
12:56:42  
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withEnv
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
12:56:42  
[Pipeline] echo
12:56:42  ---> START PHASE 'Linting'
[Pipeline] echo
12:56:42  Switching to container ''
[Pipeline] container
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Linting)
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] configFileProvider
12:56:43  provisioning config files...
[Pipeline] {
[Pipeline] dir
12:56:43  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] echo
12:56:43  Phase caching is disabled, not stashing files.
[Pipeline] parallel
[Pipeline] { (Branch: approvalrequest)
[Pipeline] echo
12:56:43  Switching to container 'jnlp'
[Pipeline] container
[Pipeline] {
[Pipeline] parallel
[Pipeline] { (Branch: sendEmail)
[Pipeline] { (Branch: sendMattermost)
[Pipeline] { (Branch: sendTeams)
[Pipeline] { (Branch: sendWebex)
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] // parallel
[Pipeline] echo
12:56:43  Give input to Jenkins request
[Pipeline] echo
12:56:43  Submitter: accounts\C8P8ZF,accounts\P57026, accounts\C7B8GS,accounts\C7Q7RW,accounts\C7R5TN,accounts\C8C7GQ,accounts\EI5194,accounts\EJ6842,accounts\C8Q9M3,accounts\C8G2NZ
[Pipeline] timeout
12:56:43  Timeout set to expire in 2 hr 0 min
[Pipeline] {
[Pipeline] input
12:56:43  Do you want to execute terraform plan to DEV-Candidate (Blue)?
12:56:43  Proceed or Abort
12:56:57  Approved by accounts\C8P8ZF
[Pipeline] }
[Pipeline] // timeout
[Pipeline] }
[Pipeline] // container
[Pipeline] }
[Pipeline] // parallel
[Pipeline] echo
12:56:57  Phase caching is disabled, not stashing files.
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // configFileProvider
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // container
[Pipeline] echo
12:56:57  <--- END PHASE 'Linting'
[Pipeline] }
12:56:57  
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withEnv
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
12:56:57  
[Pipeline] echo
12:56:57  ---> START PHASE 'Module'
[Pipeline] echo
12:56:57  Switching to container 'cnp-docker-terraformv100-dev-ov2'
[Pipeline] container
[Pipeline] {
[Pipeline] echo
12:56:57  Credential : [@string(credentialsId=DAWS-HS-UPSILONFRIES,variable=CNP_DEPLOY_TERRAFORM_AWS_MODULE_TOKEN), @string(credentialsId=DAWS-HS-UPSILONFRIES,variable=CNP_DEPLOY_TERRAFORM_AWS_TOKEN)]
[Pipeline] echo
12:56:57  Jira Scanning - DISABLED
[Pipeline] echo
12:56:57  CNP_XLR_TEMPLATE_URL is configured to https://xlrelease.express-scripts.com/api/v1/templates/Applications/templates/Folder2a9c42e13b784e8fbb57c559852b807c/Release47c3527db6944b918488c5c90166c4b0/start
[Pipeline] echo
12:56:57  setting CNP_CALLBACK_JOB to https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/XLRCallbackHandler/
[Pipeline] echo
12:56:57  setting CNP_CANDIDATE_JOB to orchestrators-folders/job/pbbef/job/Production/job/DevOps/job/EPF/job/CandidateDeployer
[Pipeline] stage
[Pipeline] { (terraform: plan)
[Pipeline] echo
12:56:57  Switching to container 'cnp-docker-terraformv100-dev-ov2'
[Pipeline] container
[Pipeline] {
[Pipeline] withCredentials
12:56:58  Masking supported pattern matches of $CNP_DEPLOY_TERRAFORM_AWS_MODULE_TOKEN or $CNP_DEPLOY_TERRAFORM_AWS_TOKEN
[Pipeline] {
[Pipeline] configFileProvider
12:56:58  provisioning config files...
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
12:56:58  Phase caching is disabled, not stashing files.
[Pipeline] dir
12:56:58  Running in /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
[Pipeline] {
[Pipeline] echo
12:56:58  ---> START MODULE (Plan Dev Candidate:cnp-deploy-terraform-aws)
[Pipeline] sh
12:56:58  + cnp-deploy-terraform-aws.sh plan {"credentials":[{"id":"DAWS-HS-UPSILONFRIES","env":"dev","type":"string"}],"configDir":"envs/dev-candidate","env":"dev","awsAccountId":"364685145795","awsUsername":"DAWS-HS-UPSILONFRIES","awsRoleName":"DEPLOYER","tfVersion":"1.4.6","tfDir":"","Release_JenkinsMaster":"orchestrator24.orchestrator-v2.sys.cigna.com","Release_BuildUri":"https://orchestrator24.orchestrator-v2.sys.cigna.com/job/orchestrators-folders/job/pbbef/job/Non-Production/job/TERRAFORMS/job/aws-terraform-hs-bef-intentapi/job/feature-PBBEF-1571/13/","Release_rollbackDeploymentPackagePath":"","branchName":"feature-PBBEF-1571","repoUrl":"https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git","commitId":"404bbc05e2025db132341608bc16599b33be8d6a"}
12:56:58  
12:56:58  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:56:58  
12:56:58  Package: cnp-deploy-terraform-aws
12:56:58  Version: 0.3.4
12:56:58  Status: install ok installed
12:56:58  Priority: optional
12:56:58  Maintainer: Evernorth Software Engineering Excellence
12:56:58  Installed-Size: unknown
12:56:58  Depends: cnp-util-core, cnp-login-aws
12:56:58  Download-Size: unknown
12:56:58  APT-Manual-Installed: yes
12:56:58  APT-Sources: /var/lib/dpkg/status
12:56:58  Description: This has terraform scripts for AWS deployment.
12:56:58  
12:56:58  Setting variable repoUrl with value 'https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git'
12:56:58  Setting variable configDir with value 'envs/dev-candidate'
12:56:59  Setting variable awsAccountId with value '364685145795'
12:56:59  Setting variable awsRoleName with value 'DEPLOYER'
12:56:59  Setting variable awsUsername with value 'DAWS-HS-UPSILONFRIES'
12:56:59  Setting variable tfVersion with value '1.4.6'
12:56:59  Missing tfDir and defaulting to repository root
12:56:59  awsUsername: DAWS-HS-UPSILONFRIES
12:56:59  loginParams: {"awsAccountId":"364685145795","awsRoleName":"DEPLOYER","awsUsername":"DAWS-HS-UPSILONFRIES"}
12:56:59  
12:56:59  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:56:59  
12:56:59  Package: cnp-login-aws
12:56:59  Version: 1.0.2-dev-ov2
12:56:59  Status: install ok installed
12:56:59  Priority: optional
12:56:59  Maintainer: Evernorth Software Engineering Excellence
12:56:59  Installed-Size: unknown
12:56:59  Depends: python3, python3-pip, apt-transport-https, unzip, curl, cnp-util-core
12:56:59  Download-Size: unknown
12:56:59  APT-Manual-Installed: no
12:56:59  APT-Sources: /var/lib/dpkg/status
12:56:59  Description: This module logs into AWS using saml2aws.
12:56:59  
12:56:59  Setting variable awsAccountId with value '364685145795'
12:56:59  Setting variable awsRoleName with value 'DEPLOYER'
12:56:59  Setting variable awsUsername with value 'DAWS-HS-UPSILONFRIES'
12:56:59  awsAccountId: 364685145795
12:56:59  awsRoleName: DEPLOYER
12:56:59  awsUsername: DAWS-HS-UPSILONFRIES
12:56:59  CNP_AWS_IDP_PROVIDER is configured to Okta.
12:56:59  For your accounts to work with Okta, DAWS-HS-UPSILONFRIES should be configured with the following
12:56:59    1. givenName=DAWS-HS-UPSILONFRIES,
12:56:59    2. sn=DAWS-HS-UPSILONFRIES,
12:56:59    3. mail=DAWS-HS-UPSILONFRIES@express-scripts.com,
12:56:59    4. employeeNumber
12:56:59  
12:56:59  Logging into AWS...
12:56:59  Using IDP Account default to access Okta https://cigna.okta.com/home/cigna_awsaccountfederation_1/0oa73k6r3qgarO3uY4x7/aln73kc6ziVIaLcRj4x7
12:56:59  Authenticating as accounts\DAWS-HS-UPSILONFRIES ...
12:57:01  Selected role: arn:aws:iam::364685145795:role/DEPLOYER
12:57:01  Requesting AWS credentials using SAML assertion
12:57:01  Logged in as: arn:aws:sts::364685145795:assumed-role/DEPLOYER/421131-S
12:57:01  
12:57:01  Your new access key pair has been stored in the AWS configuration
12:57:01  Note that it will expire at 2025-02-12 18:57:01 +0000 UTC
12:57:01  
12:57:01  saml2aws login successful
12:57:01  
12:57:01  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:57:01  
12:57:01  Package: cnp-util-core
12:57:01  Version: 1.0.2-dev-ov2
12:57:01  Status: install ok installed
12:57:01  Priority: optional
12:57:01  Maintainer: Evernorth Software Engineering Excellence
12:57:01  Installed-Size: unknown
12:57:01  Depends: jq
12:57:01  Download-Size: unknown
12:57:01  APT-Manual-Installed: no
12:57:01  APT-Sources: /var/lib/dpkg/status
12:57:01  Description: Scripts and utilities for use with your cnp modules
12:57:01  
12:57:01  
12:57:01  cnp-login-aws.sh saml2aws successful
12:57:01  Setup git config & install Terraform...
12:57:01  core.repositoryformatversion=0
12:57:01  core.filemode=true
12:57:01  core.bare=false
12:57:01  core.logallrefupdates=true
12:57:01  core.hookspath=/dev/null
12:57:01  remote.origin.url=https://git.express-scripts.com/ExpressScripts/aws-terraform-hs-bef-intentapi.git
12:57:01  remote.origin.fetch=+refs/heads/feature-PBBEF-1571:refs/remotes/origin/feature-PBBEF-1571
12:57:01  url.https://:@git.express-scripts.com/.insteadof=git@git.express-scripts.com:
12:57:01  url.https://:@git.express-scripts.com.insteadof=https://git.express-scripts.com
12:57:01  http.sslverify=false
12:57:01  Installing Terraform v1.4.6
12:57:01  Downloading release tarball from https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip
12:57:02  Downloading SHA hash file from https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_SHA256SUMS
12:57:02  Not instructed to use Local PGP (/opt/.tfenv/use-{gpgv,gnupg}) & No keybase install found, skipping OpenPGP signature verification
12:57:03  Archive:  /tmp/tfenv_download.kLHHli/terraform_1.4.6_linux_amd64.zip
12:57:03    inflating: /opt/.tfenv/versions/1.4.6/terraform  
12:57:03  Installation of terraform v1.4.6 successful. To make this your default version, run 'tfenv use 1.4.6'
12:57:03  Switching default version to v1.4.6
12:57:03  Default version (when not overridden by .terraform-version or TFENV_TERRAFORM_VERSION) is now: 1.4.6
12:57:03  Initializing Terraform...
12:57:03  - Terraform Working Directory: /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
12:57:03  - backend config: envs/dev-candidate/backend.config
12:57:04  
12:57:04  Initializing the backend...
12:57:04  
12:57:04  Successfully configured the backend "s3"! Terraform will automatically
12:57:04  use this backend unless the backend configuration changes.
12:57:04  Initializing modules...
12:57:04  Downloading git::https://github.sys.cigna.com/cigna/thub-gov-terraform-kms.git for bef-presigned-url-kms...
12:57:05  - bef-presigned-url-kms in .terraform/modules/bef-presigned-url-kms
12:57:05  Downloading git::https://github.sys.cigna.com/cigna/terraform-aws-s3 for bef-storage-s3...
12:57:05  - bef-storage-s3 in .terraform/modules/bef-storage-s3
12:57:05  Downloading git::https://github.sys.cigna.com/cigna/lambda.git?ref=1.4.0 for callback-lambda...
12:57:06  - callback-lambda in .terraform/modules/callback-lambda
12:57:06  Downloading git::https://github.sys.cigna.com/cigna/lambda.git?ref=1.4.0 for presigned-url-lambda...
12:57:06  - presigned-url-lambda in .terraform/modules/presigned-url-lambda
12:57:06  Downloading git::https://github.sys.cigna.com/cigna/AWS-GoldenVPC.git?ref=0.7.0 for presigned-url-vpc...
12:57:24  - presigned-url-vpc in .terraform/modules/presigned-url-vpc
12:57:24  - presigned-url-vpc.nat_gateway in .terraform/modules/presigned-url-vpc/submodules/nat_gateway
12:57:24  - presigned-url-vpc.subnets_non_routable in .terraform/modules/presigned-url-vpc/submodules/subnets
12:57:24  - presigned-url-vpc.subnets_routable in .terraform/modules/presigned-url-vpc/submodules/subnets
12:57:24  
12:57:24  Initializing provider plugins...
12:57:24  - terraform.io/builtin/terraform is built in to Terraform
12:57:24  - Finding latest version of hashicorp/archive...
12:57:24  - Finding hashicorp/aws versions matching ">= 3.43.0, >= 3.45.0, >= 4.0.0, >= 4.35.0, ~> 5.0"...
12:57:24  - Installing hashicorp/archive v2.7.0...
12:57:24  - Installed hashicorp/archive v2.7.0 (signed by HashiCorp)
12:57:24  - Installing hashicorp/aws v5.86.1...
12:58:03  - Installed hashicorp/aws v5.86.1 (signed by HashiCorp)
12:58:03  
12:58:03  Terraform has created a lock file .terraform.lock.hcl to record the provider
12:58:03  selections it made above. Include this file in your version control repository
12:58:03  so that Terraform can guarantee to make the same selections by default when
12:58:03  you run "terraform init" in the future.
12:58:03  
12:58:03  Terraform has been successfully initialized!
12:58:03  
12:58:03  You may now begin working with Terraform. Try running "terraform plan" to see
12:58:03  any changes that are required for your infrastructure. All Terraform commands
12:58:03  should now work.
12:58:03  
12:58:03  If you ever set or change modules or backend configuration for Terraform,
12:58:03  rerun this command to reinitialize your working directory. If you forget, other
12:58:03  commands will detect it and remind you to do so if necessary.
12:58:03  
12:58:03  terraform init successful
12:58:03  - Using Var File: envs/dev-candidate/dev-candidate.tfvars
12:58:03  
12:58:03  Planning...
12:58:03  - Terraform Working Directory: /home/jenkins/agent/workspace/bef-intentapi_feature-PBBEF-1571
12:58:03  - Terraform Config Directory: envs/dev-candidate
12:58:03  terraform plan -no-color -input=false -var-file=envs/dev-candidate/dev-candidate.tfvars  
12:58:29  data.archive_file.presigned-url-code: Reading...
12:58:29  data.archive_file.callback-lambda-code: Reading...
12:58:29  data.archive_file.callback-lambda-code: Read complete after 0s [id=2f39bf1826dad6aca6982d5cb5685d6f97c92184]
12:58:29  data.archive_file.presigned-url-code: Read complete after 0s [id=4e1b3bbeea6e0c8e7281964da11adc6e7d50cc6e]
12:58:36  module.bef-presigned-url-kms.data.aws_caller_identity.current: Reading...
12:58:36  data.aws_iam_role.bef_lambda_role: Reading...
12:58:36  module.presigned-url-vpc.data.aws_region.current: Reading...
12:58:36  module.presigned-url-vpc.data.aws_caller_identity.current: Reading...
12:58:36  module.presigned-url-vpc.data.aws_region.current: Read complete after 0s [id=us-east-2]
12:58:36  module.presigned-url-vpc.data.aws_vpc_endpoint_service.interfaces["secretsmanager"]: Reading...
12:58:36  data.aws_caller_identity.current: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.org_centralized_logging_arn: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.org_centralized_logging_role: Reading...
12:58:36  module.bef-presigned-url-kms.data.aws_caller_identity.current: Read complete after 0s [id=364685145795]
12:58:36  module.presigned-url-vpc.data.aws_caller_identity.current: Read complete after 0s [id=364685145795]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameters_by_path.route53_as_a_service_zones_by_path: Reading...
12:58:36  data.aws_region.current_region: Reading...
12:58:36  data.aws_region.current_region: Read complete after 0s [id=us-east-2]
12:58:36  module.presigned-url-vpc.data.aws_vpc_endpoint_service.gateways["s3"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.transit_gateway_id: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AccountsRootCorp"]: Reading...
12:58:36  data.aws_caller_identity.current: Read complete after 0s [id=364685145795]
12:58:36  data.aws_iam_role.bef_lambda_role: Read complete after 0s [id=BEFStorageSolution]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["OpenshiftEvernorthcloudCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["ExpressScriptsCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["UsEast1ConfluentCloud"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameters_by_path.route53_as_a_service_zones_by_path: Read complete after 0s [id=/HermesManaged/Route53AsAService/PrivateHostedZoneId/]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["MedcoCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["ExpressScriptsCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdExpressScriptsCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignatestCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.transit_gateway_id: Read complete after 0s [id=/Enterprise/TgwId]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.org_centralized_logging_role: Read complete after 0s [id=/Enterprise/OrgCentralLoggingRole]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AwsEvernorthcloudCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["OpenshiftCignacloudCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["OpenshiftEvernorthcloudCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdOpenshiftEvernorthcloudCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["ExpressScriptsIo"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AccountsRootCorp"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdAccountsRootCorp]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.org_centralized_logging_arn: Read complete after 0s [id=/Enterprise/OrgCentralLoggingDestinationArn]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AwsCignacloudCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["PrivatelinkSnowflakecomputingCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["UsEast1ConfluentCloud"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdUsEast1ConfluentCloud]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignaCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_vpc_endpoint_service.interfaces["secretsmanager"]: Read complete after 0s [id=2400593449]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["PrivatelinkSnowflakecomputingComRegionless"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AwsEvernorthcloudCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdAwsEvernorthcloudCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignaEnvoy"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["MedcoCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdMedcoCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["PrivatelinkSnowflakecomputingCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdPrivatelinkSnowflakecomputingCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["SilverCom"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignatestCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdCignatestCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["ExpressScriptsIo"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdExpressScriptsIo]
12:58:36  data.aws_ssm_parameter.org_logging_arn: Reading...
12:58:36  module.presigned-url-vpc.data.aws_availability_zones.available_zones: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["AwsCignacloudCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdAwsCignacloudCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignaCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdCignaCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["OpenshiftCignacloudCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdOpenshiftCignacloudCom]
12:58:36  data.aws_iam_policy_document.presigned-url-s3-endpoint-policy: Reading...
12:58:36  module.presigned-url-vpc.data.aws_vpc_endpoint_service.gateways["s3"]: Read complete after 0s [id=421398876]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_query_log_config_id: Reading...
12:58:36  data.aws_iam_role.bef_lambda_callback_role: Reading...
12:58:36  data.aws_ssm_parameter.org_logging_role: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ec2_managed_prefix_list.prefix_list_health_services: Reading...
12:58:36  data.aws_iam_policy_document.presigned-url-s3-endpoint-policy: Read complete after 0s [id=2750445730]
12:58:36  module.presigned-url-vpc.data.aws_default_tags.provider_tags: Reading...
12:58:36  module.presigned-url-vpc.data.aws_default_tags.provider_tags: Read complete after 0s [id=aws]
12:58:36  module.bef-storage-s3.data.aws_iam_account_alias.current: Reading...
12:58:36  data.aws_ssm_parameter.org_logging_arn: Read complete after 0s [id=/Enterprise/OrgCentralLoggingDestinationArn]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_default_zone_ids["Cigna"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["PrivatelinkSnowflakecomputingComRegionless"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdPrivatelinkSnowflakecomputingComRegionless]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_default_zone_ids["Evernorthcloud"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["CignaEnvoy"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdCignaEnvoy]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_rule_ids["SilverCom"]: Read complete after 0s [id=/Enterprise/Route53ResolverRuleIdSilverCom]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_default_zone_ids["Evernorthcloud"]: Read complete after 0s [id=/Enterprise/EvernorthcloudPrivateHostedZoneId]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_resolver_query_log_config_id: Read complete after 0s [id=/Enterprise/Route53QueryLoggingConfigId]
12:58:36  data.aws_ssm_parameter.org_logging_role: Read complete after 0s [id=/Enterprise/OrgCentralLoggingRole]
12:58:36  data.aws_iam_role.bef_lambda_callback_role: Read complete after 0s [id=BEFStorageSolutionLambdaCallback]
12:58:36  module.presigned-url-vpc.data.aws_availability_zones.available_zones: Read complete after 0s [id=us-east-2]
12:58:36  module.presigned-url-vpc.data.aws_ssm_parameter.route53_default_zone_ids["Cigna"]: Read complete after 0s [id=/Enterprise/PrivateHostedZoneId]
12:58:36  module.presigned-url-vpc.data.aws_iam_account_alias.current: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.centralized_logging_role_policy: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_gateway_policy_s3: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.centralized_logging_role_policy: Read complete after 0s [id=4259938867]
12:58:36  module.bef-storage-s3.data.aws_iam_account_alias.current: Read complete after 0s [id=hs-upsilon-fries-dev]
12:58:36  data.aws_iam_policy_document.presigned-url-s3-policy: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_account_alias.current: Read complete after 0s [id=hs-upsilon-fries-dev]
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_gateway_policy_s3: Read complete after 0s [id=1411051261]
12:58:36  data.aws_iam_policy_document.presigned-url-kms-iam-policy: Reading...
12:58:36  data.aws_iam_policy_document.presigned-url-s3-policy: Read complete after 0s [id=67042431]
12:58:36  data.aws_iam_policy_document.presigned-url-kms-iam-policy: Read complete after 0s [id=1940738493]
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_interface_policy["secretsmanager"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_gateway_policy["s3"]: Reading...
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_interface_policy["secretsmanager"]: Read complete after 1s [id=431242839]
12:58:36  module.presigned-url-vpc.data.aws_ec2_managed_prefix_list.prefix_list_health_services: Read complete after 1s [id=pl-0ee74e3f81925a429]
12:58:36  module.presigned-url-vpc.data.aws_iam_policy_document.endpoint_gateway_policy["s3"]: Read complete after 1s [id=1022365009]
12:58:39  
12:58:39  Terraform used the selected providers to generate the following execution
12:58:39  plan. Resource actions are indicated with the following symbols:
12:58:39    + create
12:58:39   <= read (data resources)
12:58:39  
12:58:39  Terraform will perform the following actions:
12:58:39  
12:58:39    # aws_cloudwatch_event_rule.bef-file-create-rule will be created
12:58:39    + resource "aws_cloudwatch_event_rule" "bef-file-create-rule" {
12:58:39        + arn            = (known after apply)
12:58:39        + event_bus_name = "default"
12:58:39        + event_pattern  = jsonencode(
12:58:39              {
12:58:39                + detail      = {
12:58:39                    + bucket = {
12:58:39                        + name = [
12:58:39                            + "bef-storage-candidates-364685145795",
12:58:39                          ]
12:58:39                      }
12:58:39                  }
12:58:39                + detail-type = [
12:58:39                    + "Object Created",
12:58:39                  ]
12:58:39                + source      = [
12:58:39                    + "aws.s3",
12:58:39                  ]
12:58:39              }
12:58:39          )
12:58:39        + force_destroy  = false
12:58:39        + id             = (known after apply)
12:58:39        + name           = "bef_storage_file_creation_notification"
12:58:39        + name_prefix    = (known after apply)
12:58:39        + tags_all       = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_cloudwatch_event_target.callback-lambda-target will be created
12:58:39    + resource "aws_cloudwatch_event_target" "callback-lambda-target" {
12:58:39        + arn            = (known after apply)
12:58:39        + event_bus_name = "default"
12:58:39        + force_destroy  = false
12:58:39        + id             = (known after apply)
12:58:39        + rule           = "bef_storage_file_creation_notification"
12:58:39        + target_id      = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_cloudwatch_log_subscription_filter.callback-subscription will be created
12:58:39    + resource "aws_cloudwatch_log_subscription_filter" "callback-subscription" {
12:58:39        + destination_arn = (sensitive value)
12:58:39        + distribution    = "Random"
12:58:39        + id              = (known after apply)
12:58:39        + log_group_name  = "/aws/lambda/bef-intent-upload-callback-candidates"
12:58:39        + name            = "bef-intent-upload-callback-candidates-subscription_filter"
12:58:39        + role_arn        = (sensitive value)
12:58:39      }
12:58:39  
12:58:39    # aws_cloudwatch_log_subscription_filter.example will be created
12:58:39    + resource "aws_cloudwatch_log_subscription_filter" "example" {
12:58:39        + destination_arn = (sensitive value)
12:58:39        + distribution    = "Random"
12:58:39        + id              = (known after apply)
12:58:39        + log_group_name  = "/aws/lambda/bef-presigned-url-candidates"
12:58:39        + name            = "bef-presigned-url-candidates-subscription_filter"
12:58:39        + role_arn        = (sensitive value)
12:58:39      }
12:58:39  
12:58:39    # aws_lambda_layer_version.bef-lambda-layer-requests will be created
12:58:39    + resource "aws_lambda_layer_version" "bef-lambda-layer-requests" {
12:58:39        + arn                         = (known after apply)
12:58:39        + code_sha256                 = (known after apply)
12:58:39        + compatible_architectures    = [
12:58:39            + "arm64",
12:58:39            + "x86_64",
12:58:39          ]
12:58:39        + compatible_runtimes         = [
12:58:39            + "python3.11",
12:58:39            + "python3.12",
12:58:39          ]
12:58:39        + created_date                = (known after apply)
12:58:39        + description                 = "Lambda Python 3.11 and Python 3.12 layer for requests and requests_aws4auth"
12:58:39        + filename                    = "./layer-packages/python_layer_requests.zip"
12:58:39        + id                          = (known after apply)
12:58:39        + layer_arn                   = (known after apply)
12:58:39        + layer_name                  = "bef-presigned-url-request-layer"
12:58:39        + signing_job_arn             = (known after apply)
12:58:39        + signing_profile_version_arn = (known after apply)
12:58:39        + skip_destroy                = false
12:58:39        + source_code_hash            = "wpthUmEbPrn+1qY4+yt3yW+jGD/T9yqpDfPvP4UCCIU="
12:58:39        + source_code_size            = (known after apply)
12:58:39        + version                     = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_lambda_permission.authinator_permission will be created
12:58:39    + resource "aws_lambda_permission" "authinator_permission" {
12:58:39        + action              = "lambda:InvokeFunction"
12:58:39        + function_name       = "bef-presigned-url-candidates"
12:58:39        + id                  = (known after apply)
12:58:39        + principal           = "arn:aws:iam::178278630275:role/GATEWAY"
12:58:39        + statement_id        = "GATEWAY"
12:58:39        + statement_id_prefix = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_lambda_permission.eventbridge-rule-execution-permission will be created
12:58:39    + resource "aws_lambda_permission" "eventbridge-rule-execution-permission" {
12:58:39        + action              = "lambda:InvokeFunction"
12:58:39        + function_name       = "bef-intent-upload-callback-candidates"
12:58:39        + id                  = (known after apply)
12:58:39        + principal           = "events.amazonaws.com"
12:58:39        + source_arn          = (known after apply)
12:58:39        + statement_id        = "AllowExecutionFromCloudWatch"
12:58:39        + statement_id_prefix = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_s3_access_point.s3_access_point will be created
12:58:39    + resource "aws_s3_access_point" "s3_access_point" {
12:58:39        + account_id               = (known after apply)
12:58:39        + alias                    = (known after apply)
12:58:39        + arn                      = (known after apply)
12:58:39        + bucket                   = (known after apply)
12:58:39        + bucket_account_id        = (known after apply)
12:58:39        + domain_name              = (known after apply)
12:58:39        + endpoints                = (known after apply)
12:58:39        + has_public_access_policy = (known after apply)
12:58:39        + id                       = (known after apply)
12:58:39        + name                     = "bef-storage-candidates-364685145795-ap"
12:58:39        + network_origin           = (known after apply)
12:58:39        + policy                   = (known after apply)
12:58:39  
12:58:39        + public_access_block_configuration {
12:58:39            + block_public_acls       = true
12:58:39            + block_public_policy     = true
12:58:39            + ignore_public_acls      = true
12:58:39            + restrict_public_buckets = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # aws_s3_bucket_notification.enable-eventbridge-notification will be created
12:58:39    + resource "aws_s3_bucket_notification" "enable-eventbridge-notification" {
12:58:39        + bucket      = "bef-storage-candidates-364685145795"
12:58:39        + eventbridge = true
12:58:39        + id          = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_s3control_access_point_policy.s3_access_point_policy will be created
12:58:39    + resource "aws_s3control_access_point_policy" "s3_access_point_policy" {
12:58:39        + access_point_arn         = (known after apply)
12:58:39        + has_public_access_policy = (known after apply)
12:58:39        + id                       = (known after apply)
12:58:39        + policy                   = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # aws_secretsmanager_secret.intent_consumer will be created
12:58:39    + resource "aws_secretsmanager_secret" "intent_consumer" {
12:58:39        + arn                            = (known after apply)
12:58:39        + description                    = "Intent API Consumer Secret"
12:58:39        + force_overwrite_replica_secret = false
12:58:39        + id                             = (known after apply)
12:58:39        + kms_key_id                     = (known after apply)
12:58:39        + name                           = "intentapi/intake_services_callback_consumer"
12:58:39        + name_prefix                    = (known after apply)
12:58:39        + policy                         = (known after apply)
12:58:39        + recovery_window_in_days        = 30
12:58:39        + tags                           = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all                       = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # aws_secretsmanager_secret_version.intent_consumer_version will be created
12:58:39    + resource "aws_secretsmanager_secret_version" "intent_consumer_version" {
12:58:39        + arn            = (known after apply)
12:58:39        + id             = (known after apply)
12:58:39        + secret_id      = (known after apply)
12:58:39        + secret_string  = (sensitive value)
12:58:39        + version_id     = (known after apply)
12:58:39        + version_stages = [
12:58:39            + "AWSCURRENT",
12:58:39          ]
12:58:39      }
12:58:39  
12:58:39    # aws_security_group.presigned-url-sg will be created
12:58:39    + resource "aws_security_group" "presigned-url-sg" {
12:58:39        + arn                    = (known after apply)
12:58:39        + description            = "Allow TCP Traffics to and from port 443"
12:58:39        + egress                 = [
12:58:39            + {
12:58:39                + cidr_blocks      = [
12:58:39                    + "10.0.0.0/8",
12:58:39                  ]
12:58:39                + description      = ""
12:58:39                + from_port        = 443
12:58:39                + ipv6_cidr_blocks = []
12:58:39                + prefix_list_ids  = (known after apply)
12:58:39                + protocol         = "tcp"
12:58:39                + security_groups  = []
12:58:39                + self             = false
12:58:39                + to_port          = 443
12:58:39              },
12:58:39          ]
12:58:39        + id                     = (known after apply)
12:58:39        + ingress                = [
12:58:39            + {
12:58:39                + cidr_blocks      = [
12:58:39                    + "10.0.0.0/8",
12:58:39                  ]
12:58:39                + description      = ""
12:58:39                + from_port        = 443
12:58:39                + ipv6_cidr_blocks = []
12:58:39                + prefix_list_ids  = []
12:58:39                + protocol         = "tcp"
12:58:39                + security_groups  = []
12:58:39                + self             = false
12:58:39                + to_port          = 443
12:58:39              },
12:58:39          ]
12:58:39        + name                   = "presigned-url-sg-candidates"
12:58:39        + name_prefix            = (known after apply)
12:58:39        + owner_id               = (known after apply)
12:58:39        + revoke_rules_on_delete = false
12:58:39        + tags                   = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Name"             = "presigned-url-sg-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Name"             = "presigned-url-sg-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + vpc_id                 = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.bef-presigned-url-kms.aws_kms_alias.key will be created
12:58:39    + resource "aws_kms_alias" "key" {
12:58:39        + arn            = (known after apply)
12:58:39        + id             = (known after apply)
12:58:39        + name           = "alias/bef-presigned-url-kms-candidates"
12:58:39        + name_prefix    = (known after apply)
12:58:39        + target_key_arn = (known after apply)
12:58:39        + target_key_id  = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.bef-presigned-url-kms.aws_kms_key.key will be created
12:58:39    + resource "aws_kms_key" "key" {
12:58:39        + arn                                = (known after apply)
12:58:39        + bypass_policy_lockout_safety_check = false
12:58:39        + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
12:58:39        + deletion_window_in_days            = 30
12:58:39        + description                        = "BEF KMS to keep the data at rest encrypted for S3, SQS, Dynamo and ES Domain"
12:58:39        + enable_key_rotation                = true
12:58:39        + id                                 = (known after apply)
12:58:39        + is_enabled                         = true
12:58:39        + key_id                             = (known after apply)
12:58:39        + key_usage                          = "ENCRYPT_DECRYPT"
12:58:39        + multi_region                       = (known after apply)
12:58:39        + policy                             = jsonencode(
12:58:39              {
12:58:39                + Statement = [
12:58:39                    + {
12:58:39                        + Action    = "kms:*"
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = "arn:aws:iam::364685145795:root"
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Root Access"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "kms:Update*",
12:58:39                            + "kms:UntagResource",
12:58:39                            + "kms:TagResource",
12:58:39                            + "kms:ScheduleKeyDeletion",
12:58:39                            + "kms:RotateKeyOnDemand",
12:58:39                            + "kms:Revoke*",
12:58:39                            + "kms:Put*",
12:58:39                            + "kms:List*",
12:58:39                            + "kms:Get*",
12:58:39                            + "kms:Enable*",
12:58:39                            + "kms:Disable*",
12:58:39                            + "kms:Describe*",
12:58:39                            + "kms:Delete*",
12:58:39                            + "kms:CreateAlias",
12:58:39                            + "kms:Create*",
12:58:39                            + "kms:CancelKeyDeletion",
12:58:39                          ]
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = "arn:aws:iam::364685145795:role/DEPLOYER"
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Key Administrator"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "kms:ReEncrypt*",
12:58:39                            + "kms:GenerateDataKey*",
12:58:39                            + "kms:Encrypt",
12:58:39                            + "kms:DescribeKey",
12:58:39                            + "kms:Decrypt",
12:58:39                          ]
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = [
12:58:39                                + "arn:aws:iam::364685145795:role/Enterprise/intentApiLambdaS3AccessPolicy",
12:58:39                                + "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolutionLambdaCallback",
12:58:39                                + "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolution",
12:58:39                                + "arn:aws:iam::364685145795:role/DEPLOYER",
12:58:39                              ]
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "User roles access"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "kms:RevokeGrant",
12:58:39                            + "kms:ListGrants",
12:58:39                            + "kms:CreateGrant",
12:58:39                          ]
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = [
12:58:39                                + "arn:aws:iam::364685145795:role/Enterprise/intentApiLambdaS3AccessPolicy",
12:58:39                                + "arn:aws:iam::364685145795:role/DEPLOYER",
12:58:39                              ]
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Allow attachment of persistent resources"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "kms:ReEncrypt*",
12:58:39                            + "kms:List*",
12:58:39                            + "kms:Get*",
12:58:39                            + "kms:GenerateDataKey*",
12:58:39                            + "kms:Encrypt",
12:58:39                            + "kms:DescribeKey",
12:58:39                            + "kms:Decrypt",
12:58:39                          ]
12:58:39                        + Condition = {
12:58:39                            + StringEquals = {
12:58:39                                + "kms:ViaService" = [
12:58:39                                    + "s3.us-east-1.amazonaws.com",
12:58:39                                    + "sqs.us-east-1.amazonaws.com",
12:58:39                                    + "dynamodb.*.amazonaws.com",
12:58:39                                  ]
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = "364685145795"
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Allow access through S3, Dynamo, SQS for current account"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "kms:Get*",
12:58:39                            + "kms:DescribeKey",
12:58:39                            + "kms:Decrypt",
12:58:39                          ]
12:58:39                        + Condition = {
12:58:39                            + StringEquals = {
12:58:39                                + "kms:ViaService" = "s3.us-east-1.amazonaws.com"
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = [
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-splitter_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-parser_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-ingest_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/get-presigned-url-role",
12:58:39                                + "arn:aws:iam::035074925037:role/UCLandzAccessrole",
12:58:39                              ]
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Allow access through S3 for Polaris and Databricks"
12:58:39                      },
12:58:39                  ]
12:58:39                + Version   = "2012-10-17"
12:58:39              }
12:58:39          )
12:58:39        + rotation_period_in_days            = (known after apply)
12:58:39        + tags                               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all                           = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_cloudwatch_metric_alarm.s3_alarm_4xx[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "s3_alarm_4xx" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:746770431074:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev|WARN||hs-upsilon-fries-dev|bef-storage-candidates-364685145795-400 errors threshold met"
12:58:39        + alarm_name                            = "bef-storage-candidates-364685145795-400-errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "BucketName" = "bef-storage-candidates-364685145795"
12:58:39            + "FilterId"   = "EntireBucket"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 5
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "4xxErrors"
12:58:39        + namespace                             = "AWS/S3"
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags                                  = {
12:58:39            + "AppName"          = ""
12:58:39            + "AssetName"        = "bef-storage-candidates-364685145795-4xx-alarm"
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev"
12:58:39            + "Purpose"          = "Trigger cloudwatch warning when threshold for 400s is met"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "7.0.5"
12:58:39          }
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 5
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_cloudwatch_metric_alarm.s3_alarm_5xx[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "s3_alarm_5xx" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:746770431074:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev|WARN||hs-upsilon-fries-dev|bef-storage-candidates-364685145795-500 errors threshold met"
12:58:39        + alarm_name                            = "bef-storage-candidates-364685145795-500-errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "BucketName" = "bef-storage-candidates-364685145795"
12:58:39            + "FilterId"   = "EntireBucket"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 5
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "5xxErrors"
12:58:39        + namespace                             = "AWS/S3"
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags                                  = {
12:58:39            + "AppName"          = ""
12:58:39            + "AssetName"        = "bef-storage-candidates-364685145795-5xx-alarm"
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev"
12:58:39            + "Purpose"          = "Trigger cloudwatch warning when threshold for 500s is met"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "7.0.5"
12:58:39          }
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 5
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket.this will be created
12:58:39    + resource "aws_s3_bucket" "this" {
12:58:39        + acceleration_status         = (known after apply)
12:58:39        + acl                         = (known after apply)
12:58:39        + arn                         = (known after apply)
12:58:39        + bucket                      = "bef-storage-candidates-364685145795"
12:58:39        + bucket_domain_name          = (known after apply)
12:58:39        + bucket_prefix               = (known after apply)
12:58:39        + bucket_regional_domain_name = (known after apply)
12:58:39        + force_destroy               = false
12:58:39        + hosted_zone_id              = (known after apply)
12:58:39        + id                          = (known after apply)
12:58:39        + object_lock_enabled         = (known after apply)
12:58:39        + policy                      = (known after apply)
12:58:39        + region                      = (known after apply)
12:58:39        + request_payer               = (known after apply)
12:58:39        + tags                        = {
12:58:39            + "AppName"                = ""
12:58:39            + "AssetName"              = "bef-storage-candidates-364685145795-s3"
12:58:39            + "AssetOwner"             = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"            = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BusinessEntity"         = "healthServices"
12:58:39            + "ComplianceDataCategory" = "none"
12:58:39            + "CostCenter"             = "60031096"
12:58:39            + "DataClassification"     = "internal"
12:58:39            + "DataSubjectArea"        = "it"
12:58:39            + "Environment"            = "dev"
12:58:39            + "LineOfBusiness"         = "healthServices"
12:58:39            + "Purpose"                = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID"       = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"           = "AS050854"
12:58:39            + "ServiceNowBA"           = "BA14783"
12:58:39            + "Version"                = "7.0.5"
12:58:39          }
12:58:39        + tags_all                    = (known after apply)
12:58:39        + website_domain              = (known after apply)
12:58:39        + website_endpoint            = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_cors_configuration.bucket_cors_configuration_this[0] will be created
12:58:39    + resource "aws_s3_bucket_cors_configuration" "bucket_cors_configuration_this" {
12:58:39        + bucket = (known after apply)
12:58:39        + id     = (known after apply)
12:58:39  
12:58:39        + cors_rule {
12:58:39            + allowed_headers = [
12:58:39                + "*",
12:58:39              ]
12:58:39            + allowed_methods = [
12:58:39                + "DELETE",
12:58:39                + "GET",
12:58:39                + "POST",
12:58:39                + "PUT",
12:58:39              ]
12:58:39            + allowed_origins = [
12:58:39                + "*",
12:58:39              ]
12:58:39            + expose_headers  = []
12:58:39            + max_age_seconds = 90
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_metric.s3_bucket_metric will be created
12:58:39    + resource "aws_s3_bucket_metric" "s3_bucket_metric" {
12:58:39        + bucket = "bef-storage-candidates-364685145795"
12:58:39        + id     = (known after apply)
12:58:39        + name   = "EntireBucket"
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_ownership_controls.s3_bucket_ownership will be created
12:58:39    + resource "aws_s3_bucket_ownership_controls" "s3_bucket_ownership" {
12:58:39        + bucket = (known after apply)
12:58:39        + id     = (known after apply)
12:58:39  
12:58:39        + rule {
12:58:39            + object_ownership = "BucketOwnerEnforced"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_policy.s3_bucket_policy will be created
12:58:39    + resource "aws_s3_bucket_policy" "s3_bucket_policy" {
12:58:39        + bucket = (known after apply)
12:58:39        + id     = (known after apply)
12:58:39        + policy = jsonencode(
12:58:39              {
12:58:39                + Statement = [
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "s3:Put*",
12:58:39                            + "s3:List*",
12:58:39                            + "s3:GetObject*",
12:58:39                            + "s3:Get*",
12:58:39                            + "s3:Delete*",
12:58:39                            + "s3:AbortMultipartUpload",
12:58:39                          ]
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = [
12:58:39                                + "arn:aws:iam::035074925037:role/UCLandzAccessrole",
12:58:39                                + "364685145795",
12:58:39                              ]
12:58:39                          }
12:58:39                        + Resource  = [
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795/*",
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795",
12:58:39                          ]
12:58:39                        + Sid       = "BEF Bucket Policy"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = "s3:GetObject"
12:58:39                        + Condition = {
12:58:39                            + "ForAnyValue:StringNotLike" = {
12:58:39                                + "aws:PrincipalArn" = [
12:58:39                                    + "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolution",
12:58:39                                    + "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolution/*",
12:58:39                                    + "arn:aws:iam::364685145795:role/DEPLOYER",
12:58:39                                    + "arn:aws:iam::364685145795:role/DEPLOYER/*",
12:58:39                                    + "arn:aws:iam::035074925037:role/UCLandzAccessrole",
12:58:39                                    + "arn:aws:iam::736713978530:role/hs-polaris-doc-parser_lambda-dev-lambda-role",
12:58:39                                    + "arn:aws:iam::736713978530:role/hs-polaris-doc-ingest_lambda-dev-lambda-role",
12:58:39                                    + "arn:aws:iam::736713978530:role/hs-polaris-doc-splitter_lambda-dev-lambda-role",
12:58:39                                    + "arn:aws:iam::736713978530:role/get-presigned-url-role",
12:58:39                                  ]
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Deny"
12:58:39                        + Principal = {
12:58:39                            + AWS = "*"
12:58:39                          }
12:58:39                        + Resource  = [
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795/*",
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795",
12:58:39                          ]
12:58:39                        + Sid       = "Deny Internet Access"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "s3:List*",
12:58:39                            + "s3:Get*",
12:58:39                          ]
12:58:39                        + Condition = {
12:58:39                            + StringEquals = {
12:58:39                                + "s3:DataAccessPointAccount" = "364685145795"
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = [
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-splitter_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-parser_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/hs-polaris-doc-ingest_lambda-dev-lambda-role",
12:58:39                                + "arn:aws:iam::736713978530:role/get-presigned-url-role",
12:58:39                              ]
12:58:39                          }
12:58:39                        + Resource  = [
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795/*",
12:58:39                            + "arn:aws:s3:::bef-storage-candidates-364685145795",
12:58:39                          ]
12:58:39                        + Sid       = "Access Point Policy"
12:58:39                      },
12:58:39                  ]
12:58:39                + Version   = "2012-10-17"
12:58:39              }
12:58:39          )
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_public_access_block.public_access_block will be created
12:58:39    + resource "aws_s3_bucket_public_access_block" "public_access_block" {
12:58:39        + block_public_acls       = true
12:58:39        + block_public_policy     = true
12:58:39        + bucket                  = (known after apply)
12:58:39        + id                      = (known after apply)
12:58:39        + ignore_public_acls      = true
12:58:39        + restrict_public_buckets = true
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_server_side_encryption_configuration.server_side_encryption_configuration_this will be created
12:58:39    + resource "aws_s3_bucket_server_side_encryption_configuration" "server_side_encryption_configuration_this" {
12:58:39        + bucket = (known after apply)
12:58:39        + id     = (known after apply)
12:58:39  
12:58:39        + rule {
12:58:39            + bucket_key_enabled = true
12:58:39  
12:58:39            + apply_server_side_encryption_by_default {
12:58:39                + kms_master_key_id = (known after apply)
12:58:39                + sse_algorithm     = "aws:kms"
12:58:39              }
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.bef-storage-s3.aws_s3_bucket_versioning.s3_bucket_versioning_this will be created
12:58:39    + resource "aws_s3_bucket_versioning" "s3_bucket_versioning_this" {
12:58:39        + bucket = (known after apply)
12:58:39        + id     = (known after apply)
12:58:39  
12:58:39        + versioning_configuration {
12:58:39            + mfa_delete = (known after apply)
12:58:39            + status     = "Enabled"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_log_group.log_group will be created
12:58:39    + resource "aws_cloudwatch_log_group" "log_group" {
12:58:39        + arn               = (known after apply)
12:58:39        + id                = (known after apply)
12:58:39        + log_group_class   = (known after apply)
12:58:39        + name              = "/aws/lambda/bef-intent-upload-callback-candidates"
12:58:39        + name_prefix       = (known after apply)
12:58:39        + retention_in_days = 30
12:58:39        + skip_destroy      = false
12:58:39        + tags              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all          = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.critical_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "critical_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|CRITICAL|bef-File-Storage-candidates|Lambda Error Rate > 20%"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-CRITICAL-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 20
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.critical_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "critical_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|CRITICAL|bef-File-Storage-candidates|Lambda Throttles > 30"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-CRITICAL-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 30
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.info_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "info_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|INFO|bef-File-Storage-candidates|Lambda Error Rate > 10%"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-INFO-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 10
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.info_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "info_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|INFO|bef-File-Storage-candidates|Lambda Throttles > 10"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-INFO-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 10
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.warn_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "warn_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|WARN|bef-File-Storage-candidates|Lambda Error Rate > 15%"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-WARN-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 15
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_cloudwatch_metric_alarm.warn_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "warn_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|WARN|bef-File-Storage-candidates|Lambda Throttles > 20"
12:58:39        + alarm_name                            = "bef-intent-upload-callback-candidates-WARN-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-intent-upload-callback-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 20
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.callback-lambda.aws_lambda_function.lambda will be created
12:58:39    + resource "aws_lambda_function" "lambda" {
12:58:39        + architectures                  = [
12:58:39            + "x86_64",
12:58:39          ]
12:58:39        + arn                            = (known after apply)
12:58:39        + code_sha256                    = (known after apply)
12:58:39        + description                    = "A Generic Lambda Function"
12:58:39        + filename                       = "./deployment-archive/callback-lambda.zip"
12:58:39        + function_name                  = "bef-intent-upload-callback-candidates"
12:58:39        + handler                        = "callback.callback"
12:58:39        + id                             = (known after apply)
12:58:39        + invoke_arn                     = (known after apply)
12:58:39        + last_modified                  = (known after apply)
12:58:39        + layers                         = (known after apply)
12:58:39        + memory_size                    = 256
12:58:39        + package_type                   = "Zip"
12:58:39        + publish                        = false
12:58:39        + qualified_arn                  = (known after apply)
12:58:39        + qualified_invoke_arn           = (known after apply)
12:58:39        + reserved_concurrent_executions = -1
12:58:39        + role                           = "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolutionLambdaCallback"
12:58:39        + runtime                        = "python3.12"
12:58:39        + signing_job_arn                = (known after apply)
12:58:39        + signing_profile_version_arn    = (known after apply)
12:58:39        + skip_destroy                   = false
12:58:39        + source_code_hash               = "BFHKbXN5VBnWkpDQrePY4H46p7KC7AJ01UMth9GilcI="
12:58:39        + source_code_size               = (known after apply)
12:58:39        + tags                           = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all                       = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + timeout                        = 30
12:58:39        + version                        = (known after apply)
12:58:39  
12:58:39        + environment {
12:58:39            + variables = {
12:58:39                + "aws_region"        = "us-east-2"
12:58:39                + "callback_url"      = "https://api-dev.express-scripts.io/evernorth/v2/intents/:artifact_id:/broadcastArtifact"
12:58:39                + "log_level"         = "DEBUG"
12:58:39                + "secret_name"       = "intentapi/intake_services_callback_consumer"
12:58:39                + "token_service_url" = "https://api-dev.express-scripts.io/v1/auth/oauth2/token"
12:58:39              }
12:58:39          }
12:58:39  
12:58:39        + vpc_config {
12:58:39            + ipv6_allowed_for_dual_stack = false
12:58:39            + security_group_ids          = (known after apply)
12:58:39            + subnet_ids                  = (known after apply)
12:58:39            + vpc_id                      = (known after apply)
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_log_group.log_group will be created
12:58:39    + resource "aws_cloudwatch_log_group" "log_group" {
12:58:39        + arn               = (known after apply)
12:58:39        + id                = (known after apply)
12:58:39        + log_group_class   = (known after apply)
12:58:39        + name              = "/aws/lambda/bef-presigned-url-candidates"
12:58:39        + name_prefix       = (known after apply)
12:58:39        + retention_in_days = 30
12:58:39        + skip_destroy      = false
12:58:39        + tags              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all          = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.critical_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "critical_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|CRITICAL|bef-File-Storage-candidates|Lambda Error Rate > 20%"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-CRITICAL-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 20
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.critical_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "critical_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|CRITICAL|bef-File-Storage-candidates|Lambda Throttles > 30"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-CRITICAL-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-presigned-url-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 30
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.info_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "info_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|INFO|bef-File-Storage-candidates|Lambda Error Rate > 10%"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-INFO-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 10
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.info_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "info_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|INFO|bef-File-Storage-candidates|Lambda Throttles > 10"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-INFO-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-presigned-url-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 10
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.warn_error_rate[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "warn_error_rate" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|WARN|bef-File-Storage-candidates|Lambda Error Rate > 15%"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-WARN-Lambda-Errors"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 15
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39  
12:58:39        + metric_query {
12:58:39            + id          = "errors"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Errors"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + id          = "invocations"
12:58:39            + return_data = false
12:58:39  
12:58:39            + metric {
12:58:39                + dimensions  = {
12:58:39                    + "FunctionName" = "bef-presigned-url-candidates"
12:58:39                  }
12:58:39                + metric_name = "Invocations"
12:58:39                + namespace   = "AWS/Lambda"
12:58:39                + period      = 60
12:58:39                + stat        = "Sum"
12:58:39                + unit        = "Count"
12:58:39              }
12:58:39          }
12:58:39        + metric_query {
12:58:39            + expression  = "(errors/invocations)*100"
12:58:39            + id          = "errorrate"
12:58:39            + label       = "Error Rate"
12:58:39            + return_data = true
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_cloudwatch_metric_alarm.warn_throttles[0] will be created
12:58:39    + resource "aws_cloudwatch_metric_alarm" "warn_throttles" {
12:58:39        + actions_enabled                       = true
12:58:39        + alarm_actions                         = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + alarm_description                     = "dev-candidates|WARN|bef-File-Storage-candidates|Lambda Throttles > 20"
12:58:39        + alarm_name                            = "bef-presigned-url-candidates-WARN-Lambda-Throttles"
12:58:39        + arn                                   = (known after apply)
12:58:39        + comparison_operator                   = "GreaterThanOrEqualToThreshold"
12:58:39        + dimensions                            = {
12:58:39            + "FunctionName" = "bef-presigned-url-candidates"
12:58:39          }
12:58:39        + evaluate_low_sample_count_percentiles = (known after apply)
12:58:39        + evaluation_periods                    = 3
12:58:39        + id                                    = (known after apply)
12:58:39        + metric_name                           = "Throttles"
12:58:39        + namespace                             = "AWS/Lambda"
12:58:39        + ok_actions                            = [
12:58:39            + "arn:aws:sns:us-east-1:929468956630:cloudwatch-alarm-funnel",
12:58:39          ]
12:58:39        + period                                = 60
12:58:39        + statistic                             = "Sum"
12:58:39        + tags_all                              = (known after apply)
12:58:39        + threshold                             = 20
12:58:39        + treat_missing_data                    = "notBreaching"
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-lambda.aws_lambda_function.lambda will be created
12:58:39    + resource "aws_lambda_function" "lambda" {
12:58:39        + architectures                  = [
12:58:39            + "x86_64",
12:58:39          ]
12:58:39        + arn                            = (known after apply)
12:58:39        + code_sha256                    = (known after apply)
12:58:39        + description                    = "A Generic Lambda Function"
12:58:39        + filename                       = "./deployment-archive/presigned-url.zip"
12:58:39        + function_name                  = "bef-presigned-url-candidates"
12:58:39        + handler                        = "presigned-url.presigned_url"
12:58:39        + id                             = (known after apply)
12:58:39        + invoke_arn                     = (known after apply)
12:58:39        + last_modified                  = (known after apply)
12:58:39        + memory_size                    = 256
12:58:39        + package_type                   = "Zip"
12:58:39        + publish                        = false
12:58:39        + qualified_arn                  = (known after apply)
12:58:39        + qualified_invoke_arn           = (known after apply)
12:58:39        + reserved_concurrent_executions = -1
12:58:39        + role                           = "arn:aws:iam::364685145795:role/Enterprise/BEFStorageSolution"
12:58:39        + runtime                        = "python3.11"
12:58:39        + signing_job_arn                = (known after apply)
12:58:39        + signing_profile_version_arn    = (known after apply)
12:58:39        + skip_destroy                   = false
12:58:39        + source_code_hash               = "rCLYP0LCkbJWYYiHY9Qx9ulK/U1DdprmiOCeK3WTvhc="
12:58:39        + source_code_size               = (known after apply)
12:58:39        + tags                           = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + tags_all                       = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "BackupOwner"      = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Environment"      = "dev-candidates"
12:58:39            + "Purpose"          = "BEF-Artifacts Storage Solution"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39          }
12:58:39        + timeout                        = 30
12:58:39        + version                        = (known after apply)
12:58:39  
12:58:39        + environment {
12:58:39            + variables = {
12:58:39                + "log_level" = "DEBUG"
12:58:39              }
12:58:39          }
12:58:39  
12:58:39        + vpc_config {
12:58:39            + ipv6_allowed_for_dual_stack = false
12:58:39            + security_group_ids          = (known after apply)
12:58:39            + subnet_ids                  = (known after apply)
12:58:39            + vpc_id                      = (known after apply)
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.data.aws_iam_policy_document.flow_log_key_resource_policy will be read during apply
12:58:39    # (config refers to values not yet known)
12:58:39   <= data "aws_iam_policy_document" "flow_log_key_resource_policy" {
12:58:39        + id            = (known after apply)
12:58:39        + json          = (known after apply)
12:58:39        + minified_json = (known after apply)
12:58:39  
12:58:39        + statement {
12:58:39            + actions   = [
12:58:39                + "*",
12:58:39              ]
12:58:39            + effect    = "Allow"
12:58:39            + resources = [
12:58:39                + "*",
12:58:39              ]
12:58:39  
12:58:39            + principals {
12:58:39                + identifiers = [
12:58:39                    + "arn:aws:iam::364685145795:root",
12:58:39                  ]
12:58:39                + type        = "AWS"
12:58:39              }
12:58:39          }
12:58:39        + statement {
12:58:39            + actions   = [
12:58:39                + "kms:Decrypt*",
12:58:39                + "kms:Describe*",
12:58:39                + "kms:Encrypt*",
12:58:39                + "kms:GenerateDataKey*",
12:58:39                + "kms:ReEncrypt*",
12:58:39              ]
12:58:39            + effect    = "Allow"
12:58:39            + resources = [
12:58:39                + "*",
12:58:39              ]
12:58:39  
12:58:39            + condition {
12:58:39                + test     = "ArnLike"
12:58:39                + values   = [
12:58:39                    + (known after apply),
12:58:39                  ]
12:58:39                + variable = "kms:EncryptionContext:aws:logs:arn"
12:58:39              }
12:58:39  
12:58:39            + principals {
12:58:39                + identifiers = [
12:58:39                    + "logs.us-east-2.amazonaws.com",
12:58:39                  ]
12:58:39                + type        = "Service"
12:58:39              }
12:58:39          }
12:58:39        + statement {
12:58:39            + actions   = [
12:58:39                + "kms:Decrypt*",
12:58:39                + "kms:Describe*",
12:58:39                + "kms:Encrypt*",
12:58:39                + "kms:GenerateDataKey*",
12:58:39                + "kms:ReEncrypt*",
12:58:39              ]
12:58:39            + effect    = "Allow"
12:58:39            + resources = [
12:58:39                + "*",
12:58:39              ]
12:58:39  
12:58:39            + condition {
12:58:39                + test     = "ArnLike"
12:58:39                + values   = [
12:58:39                    + (known after apply),
12:58:39                  ]
12:58:39                + variable = "kms:EncryptionContext:aws:logs:arn"
12:58:39              }
12:58:39  
12:58:39            + principals {
12:58:39                # At least one attribute in this block is (or was) sensitive,
12:58:39                # so its contents will not be displayed.
12:58:39              }
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.data.aws_iam_policy_document.flow_log_key_role_policy will be read during apply
12:58:39    # (config refers to values not yet known)
12:58:39   <= data "aws_iam_policy_document" "flow_log_key_role_policy" {
12:58:39        + id            = (known after apply)
12:58:39        + json          = (known after apply)
12:58:39        + minified_json = (known after apply)
12:58:39  
12:58:39        + statement {
12:58:39            + actions   = [
12:58:39                + "kms:Decrypt*",
12:58:39                + "kms:Describe*",
12:58:39                + "kms:Encrypt*",
12:58:39                + "kms:GenerateDataKey*",
12:58:39                + "kms:ReEncrypt*",
12:58:39              ]
12:58:39            + effect    = "Allow"
12:58:39            + resources = [
12:58:39                + (known after apply),
12:58:39              ]
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_cloudwatch_log_group.flow_log_group will be created
12:58:39    + resource "aws_cloudwatch_log_group" "flow_log_group" {
12:58:39        + arn               = (known after apply)
12:58:39        + id                = (known after apply)
12:58:39        + kms_key_id        = (known after apply)
12:58:39        + log_group_class   = (known after apply)
12:58:39        + name              = (known after apply)
12:58:39        + name_prefix       = (known after apply)
12:58:39        + retention_in_days = 14
12:58:39        + skip_destroy      = false
12:58:39        + tags              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all          = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_cloudwatch_log_subscription_filter.splunk will be created
12:58:39    + resource "aws_cloudwatch_log_subscription_filter" "splunk" {
12:58:39        + destination_arn = (sensitive value)
12:58:39        + distribution    = "Random"
12:58:39        + id              = (known after apply)
12:58:39        + log_group_name  = (known after apply)
12:58:39        + name            = "centralized-logging-stream"
12:58:39        + role_arn        = (sensitive value)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_default_network_acl.default will be created
12:58:39    + resource "aws_default_network_acl" "default" {
12:58:39        + arn                    = (known after apply)
12:58:39        + default_network_acl_id = (known after apply)
12:58:39        + id                     = (known after apply)
12:58:39        + owner_id               = (known after apply)
12:58:39        + subnet_ids             = (known after apply)
12:58:39        + tags                   = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-nacl"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-nacl"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_id                 = (known after apply)
12:58:39  
12:58:39        + egress {
12:58:39            + action          = "allow"
12:58:39            + from_port       = 0
12:58:39            + ipv6_cidr_block = "::/0"
12:58:39            + protocol        = "-1"
12:58:39            + rule_no         = 200
12:58:39            + to_port         = 0
12:58:39          }
12:58:39        + egress {
12:58:39            + action     = "allow"
12:58:39            + cidr_block = "0.0.0.0/0"
12:58:39            + from_port  = 0
12:58:39            + protocol   = "-1"
12:58:39            + rule_no    = 100
12:58:39            + to_port    = 0
12:58:39          }
12:58:39  
12:58:39        + ingress {
12:58:39            + action          = "allow"
12:58:39            + from_port       = 0
12:58:39            + ipv6_cidr_block = "::/0"
12:58:39            + protocol        = "-1"
12:58:39            + rule_no         = 200
12:58:39            + to_port         = 0
12:58:39          }
12:58:39        + ingress {
12:58:39            + action     = "allow"
12:58:39            + cidr_block = "0.0.0.0/0"
12:58:39            + from_port  = 0
12:58:39            + protocol   = "-1"
12:58:39            + rule_no    = 100
12:58:39            + to_port    = 0
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_default_route_table.default will be created
12:58:39    + resource "aws_default_route_table" "default" {
12:58:39        + arn                    = (known after apply)
12:58:39        + default_route_table_id = (known after apply)
12:58:39        + id                     = (known after apply)
12:58:39        + owner_id               = (known after apply)
12:58:39        + route                  = (known after apply)
12:58:39        + tags                   = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-route-table"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-route-table"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_id                 = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_default_security_group.default will be created
12:58:39    + resource "aws_default_security_group" "default" {
12:58:39        + arn                    = (known after apply)
12:58:39        + description            = (known after apply)
12:58:39        + egress                 = [
12:58:39            + {
12:58:39                + cidr_blocks      = [
12:58:39                    + "127.0.0.1/32",
12:58:39                  ]
12:58:39                + description      = "only egress to localhost"
12:58:39                + from_port        = 0
12:58:39                + ipv6_cidr_blocks = []
12:58:39                + prefix_list_ids  = []
12:58:39                + protocol         = "-1"
12:58:39                + security_groups  = []
12:58:39                + self             = false
12:58:39                + to_port          = 0
12:58:39              },
12:58:39          ]
12:58:39        + id                     = (known after apply)
12:58:39        + ingress                = (known after apply)
12:58:39        + name                   = (known after apply)
12:58:39        + name_prefix            = (known after apply)
12:58:39        + owner_id               = (known after apply)
12:58:39        + revoke_rules_on_delete = false
12:58:39        + tags                   = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-sg"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-default-sg"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_id                 = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_ec2_transit_gateway_vpc_attachment.tgw_attachment[0] will be created
12:58:39    + resource "aws_ec2_transit_gateway_vpc_attachment" "tgw_attachment" {
12:58:39        + appliance_mode_support                          = "disable"
12:58:39        + arn                                             = (known after apply)
12:58:39        + dns_support                                     = "enable"
12:58:39        + id                                              = (known after apply)
12:58:39        + ipv6_support                                    = "disable"
12:58:39        + security_group_referencing_support              = (known after apply)
12:58:39        + subnet_ids                                      = (known after apply)
12:58:39        + tags                                            = (known after apply)
12:58:39        + tags_all                                        = (known after apply)
12:58:39        + transit_gateway_default_route_table_association = (known after apply)
12:58:39        + transit_gateway_default_route_table_propagation = (known after apply)
12:58:39        + transit_gateway_id                              = (sensitive value)
12:58:39        + vpc_id                                          = (known after apply)
12:58:39        + vpc_owner_id                                    = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_flow_log.flow_log will be created
12:58:39    + resource "aws_flow_log" "flow_log" {
12:58:39        + arn                      = (known after apply)
12:58:39        + iam_role_arn             = (known after apply)
12:58:39        + id                       = (known after apply)
12:58:39        + log_destination          = (known after apply)
12:58:39        + log_destination_type     = "cloud-watch-logs"
12:58:39        + log_format               = (known after apply)
12:58:39        + log_group_name           = (known after apply)
12:58:39        + max_aggregation_interval = 600
12:58:39        + tags_all                 = (known after apply)
12:58:39        + traffic_type             = "ALL"
12:58:39        + vpc_id                   = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_iam_role.flow_logs_role will be created
12:58:39    + resource "aws_iam_role" "flow_logs_role" {
12:58:39        + arn                   = (known after apply)
12:58:39        + assume_role_policy    = jsonencode(
12:58:39              {
12:58:39                + Statement = [
12:58:39                    + {
12:58:39                        + Action    = "sts:AssumeRole"
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + Service = [
12:58:39                                + "vpc-flow-logs.amazonaws.com",
12:58:39                                + "logs.amazonaws.com",
12:58:39                              ]
12:58:39                          }
12:58:39                      },
12:58:39                  ]
12:58:39                + Version   = "2008-10-17"
12:58:39              }
12:58:39          )
12:58:39        + create_date           = (known after apply)
12:58:39        + force_detach_policies = false
12:58:39        + id                    = (known after apply)
12:58:39        + managed_policy_arns   = [
12:58:39            + "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
12:58:39          ]
12:58:39        + max_session_duration  = 3600
12:58:39        + name                  = (known after apply)
12:58:39        + name_prefix           = (known after apply)
12:58:39        + path                  = "/"
12:58:39        + tags                  = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + unique_id             = (known after apply)
12:58:39  
12:58:39        + inline_policy {
12:58:39            + name   = "CentralizedLoggingDestinationRequirements"
12:58:39            + policy = jsonencode(
12:58:39                  {
12:58:39                    + Statement = [
12:58:39                        + {
12:58:39                            + Action   = [
12:58:39                                + "logs:PutSubscriptionFilter",
12:58:39                                + "logs:DescribeSubscriptionFilters",
12:58:39                                + "logs:DeleteSubscriptionFilter",
12:58:39                              ]
12:58:39                            + Effect   = "Allow"
12:58:39                            + Resource = "arn:aws:logs:us-east-2:746770431074:destination:CentralizedLogging-v2-DestinationForOrg"
12:58:39                          },
12:58:39                      ]
12:58:39                    + Version   = "2012-10-17"
12:58:39                  }
12:58:39              )
12:58:39          }
12:58:39        + inline_policy {
12:58:39            + name   = "LogGroupEncryptionKey"
12:58:39            + policy = (known after apply)
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_kms_alias.flow_log_key_alias will be created
12:58:39    + resource "aws_kms_alias" "flow_log_key_alias" {
12:58:39        + arn            = (known after apply)
12:58:39        + id             = (known after apply)
12:58:39        + name           = "alias/presigned-url-candidates-flow-logs-key"
12:58:39        + name_prefix    = (known after apply)
12:58:39        + target_key_arn = (known after apply)
12:58:39        + target_key_id  = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_kms_key.flow_log_key will be created
12:58:39    + resource "aws_kms_key" "flow_log_key" {
12:58:39        + arn                                = (known after apply)
12:58:39        + bypass_policy_lockout_safety_check = false
12:58:39        + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
12:58:39        + description                        = (known after apply)
12:58:39        + enable_key_rotation                = true
12:58:39        + id                                 = (known after apply)
12:58:39        + is_enabled                         = true
12:58:39        + key_id                             = (known after apply)
12:58:39        + key_usage                          = "ENCRYPT_DECRYPT"
12:58:39        + multi_region                       = (known after apply)
12:58:39        + policy                             = (known after apply)
12:58:39        + rotation_period_in_days            = (known after apply)
12:58:39        + tags                               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all                           = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_kms_key_policy.flow_log_key_policy will be created
12:58:39    + resource "aws_kms_key_policy" "flow_log_key_policy" {
12:58:39        + bypass_policy_lockout_safety_check = false
12:58:39        + id                                 = (known after apply)
12:58:39        + key_id                             = (known after apply)
12:58:39        + policy                             = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_query_log_config_association.query_log_config_association[0] will be created
12:58:39    + resource "aws_route53_resolver_query_log_config_association" "query_log_config_association" {
12:58:39        + id                           = (known after apply)
12:58:39        + resolver_query_log_config_id = (sensitive value)
12:58:39        + resource_id                  = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["AccountsRootCorp"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "AccountsRootCorp"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["AwsCignacloudCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "AwsCignacloudCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["AwsEvernorthcloudCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "AwsEvernorthcloudCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["CignaCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "CignaCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["CignaEnvoy"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "CignaEnvoy"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["CignatestCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "CignatestCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["ExpressScriptsCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "ExpressScriptsCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["ExpressScriptsIo"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "ExpressScriptsIo"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["MedcoCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "MedcoCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["OpenshiftCignacloudCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "OpenshiftCignacloudCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["OpenshiftEvernorthcloudCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "OpenshiftEvernorthcloudCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["PrivatelinkSnowflakecomputingCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "PrivatelinkSnowflakecomputingCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["PrivatelinkSnowflakecomputingComRegionless"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "PrivatelinkSnowflakecomputingComRegionless"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["SilverCom"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "SilverCom"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_resolver_rule_association.rule_associations["UsEast1ConfluentCloud"] will be created
12:58:39    + resource "aws_route53_resolver_rule_association" "rule_associations" {
12:58:39        + id               = (known after apply)
12:58:39        + name             = "UsEast1ConfluentCloud"
12:58:39        + resolver_rule_id = (sensitive value)
12:58:39        + vpc_id           = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_zone_association.default_associations["Cigna"] will be created
12:58:39    + resource "aws_route53_zone_association" "default_associations" {
12:58:39        + id             = (known after apply)
12:58:39        + owning_account = (known after apply)
12:58:39        + vpc_id         = (known after apply)
12:58:39        + vpc_region     = (known after apply)
12:58:39        + zone_id        = (sensitive value)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_route53_zone_association.default_associations["Evernorthcloud"] will be created
12:58:39    + resource "aws_route53_zone_association" "default_associations" {
12:58:39        + id             = (known after apply)
12:58:39        + owning_account = (known after apply)
12:58:39        + vpc_id         = (known after apply)
12:58:39        + vpc_region     = (known after apply)
12:58:39        + zone_id        = (sensitive value)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_security_group.interface_endpoints[0] will be created
12:58:39    + resource "aws_security_group" "interface_endpoints" {
12:58:39        + arn                    = (known after apply)
12:58:39        + description            = "Allow all traffic within Cigna"
12:58:39        + egress                 = (known after apply)
12:58:39        + id                     = (known after apply)
12:58:39        + ingress                = [
12:58:39            + {
12:58:39                + cidr_blocks      = [
12:58:39                    + "10.0.0.0/8",
12:58:39                    + "100.126.0.0/15",
12:58:39                  ]
12:58:39                + description      = "Allow HTTPS inbound traffic from on-prem, HS, and non-routable address space"
12:58:39                + from_port        = 443
12:58:39                + ipv6_cidr_blocks = []
12:58:39                + prefix_list_ids  = [
12:58:39                    + "pl-0ee74e3f81925a429",
12:58:39                  ]
12:58:39                + protocol         = "tcp"
12:58:39                + security_groups  = []
12:58:39                + self             = false
12:58:39                + to_port          = 443
12:58:39              },
12:58:39          ]
12:58:39        + name                   = (known after apply)
12:58:39        + name_prefix            = (known after apply)
12:58:39        + owner_id               = (known after apply)
12:58:39        + revoke_rules_on_delete = false
12:58:39        + tags                   = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-interface-endpoints-sg"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all               = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-interface-endpoints-sg"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_id                 = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc.vpc will be created
12:58:39    + resource "aws_vpc" "vpc" {
12:58:39        + arn                                  = (known after apply)
12:58:39        + assign_generated_ipv6_cidr_block     = false
12:58:39        + cidr_block                           = "10.190.251.0/27"
12:58:39        + default_network_acl_id               = (known after apply)
12:58:39        + default_route_table_id               = (known after apply)
12:58:39        + default_security_group_id            = (known after apply)
12:58:39        + dhcp_options_id                      = (known after apply)
12:58:39        + enable_dns_hostnames                 = true
12:58:39        + enable_dns_support                   = true
12:58:39        + enable_network_address_usage_metrics = true
12:58:39        + id                                   = (known after apply)
12:58:39        + instance_tenancy                     = "default"
12:58:39        + ipv6_association_id                  = (known after apply)
12:58:39        + ipv6_cidr_block                      = (known after apply)
12:58:39        + ipv6_cidr_block_network_border_group = (known after apply)
12:58:39        + main_route_table_id                  = (known after apply)
12:58:39        + owner_id                             = (known after apply)
12:58:39        + tags                                 = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all                             = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_dhcp_options.dhcp_options[0] will be created
12:58:39    + resource "aws_vpc_dhcp_options" "dhcp_options" {
12:58:39        + arn                 = (known after apply)
12:58:39        + domain_name         = "ec2.internal"
12:58:39        + domain_name_servers = [
12:58:39            + "AmazonProvidedDNS",
12:58:39          ]
12:58:39        + id                  = (known after apply)
12:58:39        + netbios_node_type   = "2"
12:58:39        + ntp_servers         = [
12:58:39            + "169.254.169.123",
12:58:39          ]
12:58:39        + owner_id            = (known after apply)
12:58:39        + tags                = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-dhcp-options"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all            = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-golden-vpc-dhcp-options"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_dhcp_options_association.dhcp_association[0] will be created
12:58:39    + resource "aws_vpc_dhcp_options_association" "dhcp_association" {
12:58:39        + dhcp_options_id = (known after apply)
12:58:39        + id              = (known after apply)
12:58:39        + vpc_id          = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_endpoint.gateways["s3"] will be created
12:58:39    + resource "aws_vpc_endpoint" "gateways" {
12:58:39        + arn                   = (known after apply)
12:58:39        + cidr_blocks           = (known after apply)
12:58:39        + dns_entry             = (known after apply)
12:58:39        + id                    = (known after apply)
12:58:39        + ip_address_type       = (known after apply)
12:58:39        + network_interface_ids = (known after apply)
12:58:39        + owner_id              = (known after apply)
12:58:39        + policy                = (known after apply)
12:58:39        + prefix_list_id        = (known after apply)
12:58:39        + private_dns_enabled   = (known after apply)
12:58:39        + requester_managed     = (known after apply)
12:58:39        + route_table_ids       = (known after apply)
12:58:39        + security_group_ids    = (known after apply)
12:58:39        + service_name          = "com.amazonaws.us-east-2.s3"
12:58:39        + service_region        = (known after apply)
12:58:39        + state                 = (known after apply)
12:58:39        + subnet_ids            = (known after apply)
12:58:39        + tags                  = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_endpoint_type     = "Gateway"
12:58:39        + vpc_id                = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_endpoint.interfaces_routable["secretsmanager"] will be created
12:58:39    + resource "aws_vpc_endpoint" "interfaces_routable" {
12:58:39        + arn                   = (known after apply)
12:58:39        + cidr_blocks           = (known after apply)
12:58:39        + dns_entry             = (known after apply)
12:58:39        + id                    = (known after apply)
12:58:39        + ip_address_type       = (known after apply)
12:58:39        + network_interface_ids = (known after apply)
12:58:39        + owner_id              = (known after apply)
12:58:39        + policy                = (known after apply)
12:58:39        + prefix_list_id        = (known after apply)
12:58:39        + private_dns_enabled   = true
12:58:39        + requester_managed     = (known after apply)
12:58:39        + route_table_ids       = (known after apply)
12:58:39        + security_group_ids    = (known after apply)
12:58:39        + service_name          = "com.amazonaws.us-east-2.secretsmanager"
12:58:39        + service_region        = (known after apply)
12:58:39        + state                 = (known after apply)
12:58:39        + subnet_ids            = (known after apply)
12:58:39        + tags                  = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-secretsmanager-interface-endpoint-routable"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + tags_all              = {
12:58:39            + "AssetOwner"       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + "CostCenter"       = "60031096"
12:58:39            + "Name"             = "presigned-url-candidates-secretsmanager-interface-endpoint-routable"
12:58:39            + "SecurityReviewID" = "NOT APPLICABLE"
12:58:39            + "ServiceNowAS"     = "AS050854"
12:58:39            + "ServiceNowBA"     = "BA14783"
12:58:39            + "Version"          = "0.7.0"
12:58:39          }
12:58:39        + vpc_endpoint_type     = "Interface"
12:58:39        + vpc_id                = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_endpoint_policy.gateway_policies["s3"] will be created
12:58:39    + resource "aws_vpc_endpoint_policy" "gateway_policies" {
12:58:39        + id              = (known after apply)
12:58:39        + policy          = jsonencode(
12:58:39              {
12:58:39                + Statement = [
12:58:39                    + {
12:58:39                        + Action    = "s3:GetObject"
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = "*"
12:58:39                        + Resource  = [
12:58:39                            + "arn:aws:s3:::rds-downloads/*",
12:58:39                            + "arn:aws:s3:::rds-downloads.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::prod-us-east-2-starport-layer-bucket/*",
12:58:39                            + "arn:aws:s3:::prod-us-east-2-starport-layer-bucket.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::inspector2-oval-prod-us-east-2/*",
12:58:39                            + "arn:aws:s3:::inspector2-oval-prod-us-east-2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::ec2-downloads-windows/*",
12:58:39                            + "arn:aws:s3:::ec2-downloads-windows.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::aws-agent.us-east-2/*",
12:58:39                            + "arn:aws:s3:::aws-agent.us-east-2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazonlinux.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazonlinux.us-east-2.amazonaws.com.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazonlinux-2-repos-us-east-2/*",
12:58:39                            + "arn:aws:s3:::amazonlinux-2-repos-us-east-2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazoncloudwatch-agent/*",
12:58:39                            + "arn:aws:s3:::amazoncloudwatch-agent.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazoncloudwatch-agent-us-east-2/*",
12:58:39                            + "arn:aws:s3:::amazoncloudwatch-agent-us-east-2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::amazon-ssm-us-east-2/*",
12:58:39                            + "arn:aws:s3:::amazon-ssm-us-east-2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                            + "arn:aws:s3:::al2023-repos-us-east-2-de612dc2/*",
12:58:39                            + "arn:aws:s3:::al2023-repos-us-east-2-de612dc2.s3.dualstack.us-east-2.amazonaws.com/*",
12:58:39                          ]
12:58:39                        + Sid       = "Allow AWS-managed S3 buckets for ECR layers and Amazon Linux repos"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = [
12:58:39                            + "s3:Put*",
12:58:39                            + "s3:Get*",
12:58:39                            + "s3:Delete*",
12:58:39                          ]
12:58:39                        + Condition = {
12:58:39                            + StringEquals = {
12:58:39                                + "aws:PrincipalOrgID" = "o-xl5jimff3q"
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = "*"
12:58:39                          }
12:58:39                        + Resource  = "arn:aws:s3:::bef*/*"
12:58:39                        + Sid       = "Allow S3 access"
12:58:39                      },
12:58:39                    + {
12:58:39                        + Action    = "*"
12:58:39                        + Condition = {
12:58:39                            + StringEquals = {
12:58:39                                + "aws:PrincipalAccount" = "364685145795"
12:58:39                                + "aws:ResourceAccount"  = "364685145795"
12:58:39                              }
12:58:39                          }
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = "*"
12:58:39                        + Resource  = "*"
12:58:39                        + Sid       = "Allow this account"
12:58:39                      },
12:58:39                  ]
12:58:39                + Version   = "2012-10-17"
12:58:39              }
12:58:39          )
12:58:39        + vpc_endpoint_id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_endpoint_policy.interface_policies["secretsmanager"] will be created
12:58:39    + resource "aws_vpc_endpoint_policy" "interface_policies" {
12:58:39        + id              = (known after apply)
12:58:39        + policy          = jsonencode(
12:58:39              {
12:58:39                + Statement = [
12:58:39                    + {
12:58:39                        + Action    = "*"
12:58:39                        + Effect    = "Allow"
12:58:39                        + Principal = {
12:58:39                            + AWS = "arn:aws:iam::364685145795:root"
12:58:39                          }
12:58:39                        + Resource  = "*"
12:58:39                      },
12:58:39                  ]
12:58:39                + Version   = "2012-10-17"
12:58:39              }
12:58:39          )
12:58:39        + vpc_endpoint_id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.aws_vpc_ipv4_cidr_block_association.secondaries_non_routable["100.126.1.0/27"] will be created
12:58:39    + resource "aws_vpc_ipv4_cidr_block_association" "secondaries_non_routable" {
12:58:39        + cidr_block = "100.126.1.0/27"
12:58:39        + id         = (known after apply)
12:58:39        + vpc_id     = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.availability_zone_validation will be created
12:58:39    + resource "terraform_data" "availability_zone_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.endpoint_validation will be created
12:58:39    + resource "terraform_data" "endpoint_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.environment_validation will be created
12:58:39    + resource "terraform_data" "environment_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.nat_gateway_validation will be created
12:58:39    + resource "terraform_data" "nat_gateway_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.subnet_validation will be created
12:58:39    + resource "terraform_data" "subnet_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.terraform_data.tag_validation will be created
12:58:39    + resource "terraform_data" "tag_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].data.aws_availability_zones.available_zones will be read during apply
12:58:39    # (depends on a resource or a module with changes pending)
12:58:39   <= data "aws_availability_zones" "available_zones" {
12:58:39        + group_names = (known after apply)
12:58:39        + id          = (known after apply)
12:58:39        + names       = (known after apply)
12:58:39        + zone_ids    = (known after apply)
12:58:39  
12:58:39        + filter {
12:58:39            + name   = "opt-in-status"
12:58:39            + values = [
12:58:39                + "opt-in-not-required",
12:58:39                + "opted-in",
12:58:39              ]
12:58:39          }
12:58:39        + filter {
12:58:39            + name   = "zone-type"
12:58:39            + values = [
12:58:39                + "availability-zone",
12:58:39              ]
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].data.aws_default_tags.provider_tags will be read during apply
12:58:39    # (depends on a resource or a module with changes pending)
12:58:39   <= data "aws_default_tags" "provider_tags" {
12:58:39        + id   = (known after apply)
12:58:39        + tags = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].aws_subnet.subnets[0] will be created
12:58:39    + resource "aws_subnet" "subnets" {
12:58:39        + arn                                            = (known after apply)
12:58:39        + assign_ipv6_address_on_creation                = false
12:58:39        + availability_zone                              = "us-east-2a"
12:58:39        + availability_zone_id                           = (known after apply)
12:58:39        + cidr_block                                     = "100.126.1.0/28"
12:58:39        + enable_dns64                                   = false
12:58:39        + enable_resource_name_dns_a_record_on_launch    = false
12:58:39        + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39        + id                                             = (known after apply)
12:58:39        + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39        + ipv6_native                                    = false
12:58:39        + map_public_ip_on_launch                        = false
12:58:39        + owner_id                                       = (known after apply)
12:58:39        + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39        + tags                                           = (known after apply)
12:58:39        + tags_all                                       = (known after apply)
12:58:39        + vpc_id                                         = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].aws_subnet.subnets[1] will be created
12:58:39    + resource "aws_subnet" "subnets" {
12:58:39        + arn                                            = (known after apply)
12:58:39        + assign_ipv6_address_on_creation                = false
12:58:39        + availability_zone                              = "us-east-2b"
12:58:39        + availability_zone_id                           = (known after apply)
12:58:39        + cidr_block                                     = "100.126.1.16/28"
12:58:39        + enable_dns64                                   = false
12:58:39        + enable_resource_name_dns_a_record_on_launch    = false
12:58:39        + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39        + id                                             = (known after apply)
12:58:39        + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39        + ipv6_native                                    = false
12:58:39        + map_public_ip_on_launch                        = false
12:58:39        + owner_id                                       = (known after apply)
12:58:39        + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39        + tags                                           = (known after apply)
12:58:39        + tags_all                                       = (known after apply)
12:58:39        + vpc_id                                         = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].terraform_data.availability_zone_validation will be created
12:58:39    + resource "terraform_data" "availability_zone_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_non_routable["100.126.1.0/27"].terraform_data.tag_validation will be created
12:58:39    + resource "terraform_data" "tag_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].data.aws_availability_zones.available_zones will be read during apply
12:58:39    # (depends on a resource or a module with changes pending)
12:58:39   <= data "aws_availability_zones" "available_zones" {
12:58:39        + group_names = (known after apply)
12:58:39        + id          = (known after apply)
12:58:39        + names       = (known after apply)
12:58:39        + zone_ids    = (known after apply)
12:58:39  
12:58:39        + filter {
12:58:39            + name   = "opt-in-status"
12:58:39            + values = [
12:58:39                + "opt-in-not-required",
12:58:39                + "opted-in",
12:58:39              ]
12:58:39          }
12:58:39        + filter {
12:58:39            + name   = "zone-type"
12:58:39            + values = [
12:58:39                + "availability-zone",
12:58:39              ]
12:58:39          }
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].data.aws_default_tags.provider_tags will be read during apply
12:58:39    # (depends on a resource or a module with changes pending)
12:58:39   <= data "aws_default_tags" "provider_tags" {
12:58:39        + id   = (known after apply)
12:58:39        + tags = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].aws_subnet.subnets[0] will be created
12:58:39    + resource "aws_subnet" "subnets" {
12:58:39        + arn                                            = (known after apply)
12:58:39        + assign_ipv6_address_on_creation                = false
12:58:39        + availability_zone                              = "us-east-2a"
12:58:39        + availability_zone_id                           = (known after apply)
12:58:39        + cidr_block                                     = "10.190.251.0/28"
12:58:39        + enable_dns64                                   = false
12:58:39        + enable_resource_name_dns_a_record_on_launch    = false
12:58:39        + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39        + id                                             = (known after apply)
12:58:39        + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39        + ipv6_native                                    = false
12:58:39        + map_public_ip_on_launch                        = false
12:58:39        + owner_id                                       = (known after apply)
12:58:39        + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39        + tags                                           = (known after apply)
12:58:39        + tags_all                                       = (known after apply)
12:58:39        + vpc_id                                         = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].aws_subnet.subnets[1] will be created
12:58:39    + resource "aws_subnet" "subnets" {
12:58:39        + arn                                            = (known after apply)
12:58:39        + assign_ipv6_address_on_creation                = false
12:58:39        + availability_zone                              = "us-east-2b"
12:58:39        + availability_zone_id                           = (known after apply)
12:58:39        + cidr_block                                     = "10.190.251.16/28"
12:58:39        + enable_dns64                                   = false
12:58:39        + enable_resource_name_dns_a_record_on_launch    = false
12:58:39        + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39        + id                                             = (known after apply)
12:58:39        + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39        + ipv6_native                                    = false
12:58:39        + map_public_ip_on_launch                        = false
12:58:39        + owner_id                                       = (known after apply)
12:58:39        + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39        + tags                                           = (known after apply)
12:58:39        + tags_all                                       = (known after apply)
12:58:39        + vpc_id                                         = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].terraform_data.availability_zone_validation will be created
12:58:39    + resource "terraform_data" "availability_zone_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39    # module.presigned-url-vpc.module.subnets_routable["10.190.251.0/27"].terraform_data.tag_validation will be created
12:58:39    + resource "terraform_data" "tag_validation" {
12:58:39        + id = (known after apply)
12:58:39      }
12:58:39  
12:58:39  Plan: 93 to add, 0 to change, 0 to destroy.
12:58:39  
12:58:39  Changes to Outputs:
12:58:39    + account_id = "364685145795"
12:58:39    + endpoint   = {
12:58:39        + arn                        = (known after apply)
12:58:39        + auto_accept                = null
12:58:39        + cidr_blocks                = (known after apply)
12:58:39        + dns_entry                  = (known after apply)
12:58:39        + dns_options                = (known after apply)
12:58:39        + id                         = (known after apply)
12:58:39        + ip_address_type            = (known after apply)
12:58:39        + network_interface_ids      = (known after apply)
12:58:39        + owner_id                   = (known after apply)
12:58:39        + policy                     = (known after apply)
12:58:39        + prefix_list_id             = (known after apply)
12:58:39        + private_dns_enabled        = (known after apply)
12:58:39        + requester_managed          = (known after apply)
12:58:39        + resource_configuration_arn = null
12:58:39        + route_table_ids            = (known after apply)
12:58:39        + security_group_ids         = (known after apply)
12:58:39        + service_name               = "com.amazonaws.us-east-2.s3"
12:58:39        + service_network_arn        = null
12:58:39        + service_region             = (known after apply)
12:58:39        + state                      = (known after apply)
12:58:39        + subnet_configuration       = (known after apply)
12:58:39        + subnet_ids                 = (known after apply)
12:58:39        + tags                       = {
12:58:39            + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + CostCenter       = "60031096"
12:58:39            + Name             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39            + SecurityReviewID = "NOT APPLICABLE"
12:58:39            + ServiceNowAS     = "AS050854"
12:58:39            + ServiceNowBA     = "BA14783"
12:58:39            + Version          = "0.7.0"
12:58:39          }
12:58:39        + tags_all                   = {
12:58:39            + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39            + CostCenter       = "60031096"
12:58:39            + Name             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39            + SecurityReviewID = "NOT APPLICABLE"
12:58:39            + ServiceNowAS     = "AS050854"
12:58:39            + ServiceNowBA     = "BA14783"
12:58:39            + Version          = "0.7.0"
12:58:39          }
12:58:39        + timeouts                   = null
12:58:39        + vpc_endpoint_type          = "Gateway"
12:58:39        + vpc_id                     = (known after apply)
12:58:39      }
12:58:39    + golden-vpc = {
12:58:39        + id                                   = (known after apply)
12:58:39        + subnets_non_routable_by_az           = {
12:58:39            + us-east-2a = [
12:58:39                + {
12:58:39                    + arn                                            = (known after apply)
12:58:39                    + assign_ipv6_address_on_creation                = false
12:58:39                    + availability_zone                              = "us-east-2a"
12:58:39                    + availability_zone_id                           = (known after apply)
12:58:39                    + cidr_block                                     = "100.126.1.0/28"
12:58:39                    + customer_owned_ipv4_pool                       = null
12:58:39                    + enable_dns64                                   = false
12:58:39                    + enable_lni_at_device_index                     = null
12:58:39                    + enable_resource_name_dns_a_record_on_launch    = false
12:58:39                    + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39                    + id                                             = (known after apply)
12:58:39                    + ipv6_cidr_block                                = null
12:58:39                    + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39                    + ipv6_native                                    = false
12:58:39                    + map_customer_owned_ip_on_launch                = null
12:58:39                    + map_public_ip_on_launch                        = false
12:58:39                    + outpost_arn                                    = null
12:58:39                    + owner_id                                       = (known after apply)
12:58:39                    + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39                    + tags                                           = (known after apply)
12:58:39                    + tags_all                                       = (known after apply)
12:58:39                    + timeouts                                       = null
12:58:39                    + vpc_id                                         = (known after apply)
12:58:39                  },
12:58:39              ]
12:58:39            + us-east-2b = [
12:58:39                + {
12:58:39                    + arn                                            = (known after apply)
12:58:39                    + assign_ipv6_address_on_creation                = false
12:58:39                    + availability_zone                              = "us-east-2b"
12:58:39                    + availability_zone_id                           = (known after apply)
12:58:39                    + cidr_block                                     = "100.126.1.16/28"
12:58:39                    + customer_owned_ipv4_pool                       = null
12:58:39                    + enable_dns64                                   = false
12:58:39                    + enable_lni_at_device_index                     = null
12:58:39                    + enable_resource_name_dns_a_record_on_launch    = false
12:58:39                    + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39                    + id                                             = (known after apply)
12:58:39                    + ipv6_cidr_block                                = null
12:58:39                    + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39                    + ipv6_native                                    = false
12:58:39                    + map_customer_owned_ip_on_launch                = null
12:58:39                    + map_public_ip_on_launch                        = false
12:58:39                    + outpost_arn                                    = null
12:58:39                    + owner_id                                       = (known after apply)
12:58:39                    + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39                    + tags                                           = (known after apply)
12:58:39                    + tags_all                                       = (known after apply)
12:58:39                    + timeouts                                       = null
12:58:39                    + vpc_id                                         = (known after apply)
12:58:39                  },
12:58:39              ]
12:58:39          }
12:58:39        + subnets_routable_by_az               = {
12:58:39            + us-east-2a = [
12:58:39                + {
12:58:39                    + arn                                            = (known after apply)
12:58:39                    + assign_ipv6_address_on_creation                = false
12:58:39                    + availability_zone                              = "us-east-2a"
12:58:39                    + availability_zone_id                           = (known after apply)
12:58:39                    + cidr_block                                     = "10.190.251.0/28"
12:58:39                    + customer_owned_ipv4_pool                       = null
12:58:39                    + enable_dns64                                   = false
12:58:39                    + enable_lni_at_device_index                     = null
12:58:39                    + enable_resource_name_dns_a_record_on_launch    = false
12:58:39                    + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39                    + id                                             = (known after apply)
12:58:39                    + ipv6_cidr_block                                = null
12:58:39                    + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39                    + ipv6_native                                    = false
12:58:39                    + map_customer_owned_ip_on_launch                = null
12:58:39                    + map_public_ip_on_launch                        = false
12:58:39                    + outpost_arn                                    = null
12:58:39                    + owner_id                                       = (known after apply)
12:58:39                    + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39                    + tags                                           = (known after apply)
12:58:39                    + tags_all                                       = (known after apply)
12:58:39                    + timeouts                                       = null
12:58:39                    + vpc_id                                         = (known after apply)
12:58:39                  },
12:58:39              ]
12:58:39            + us-east-2b = [
12:58:39                + {
12:58:39                    + arn                                            = (known after apply)
12:58:39                    + assign_ipv6_address_on_creation                = false
12:58:39                    + availability_zone                              = "us-east-2b"
12:58:39                    + availability_zone_id                           = (known after apply)
12:58:39                    + cidr_block                                     = "10.190.251.16/28"
12:58:39                    + customer_owned_ipv4_pool                       = null
12:58:39                    + enable_dns64                                   = false
12:58:39                    + enable_lni_at_device_index                     = null
12:58:39                    + enable_resource_name_dns_a_record_on_launch    = false
12:58:39                    + enable_resource_name_dns_aaaa_record_on_launch = false
12:58:39                    + id                                             = (known after apply)
12:58:39                    + ipv6_cidr_block                                = null
12:58:39                    + ipv6_cidr_block_association_id                 = (known after apply)
12:58:39                    + ipv6_native                                    = false
12:58:39                    + map_customer_owned_ip_on_launch                = null
12:58:39                    + map_public_ip_on_launch                        = false
12:58:39                    + outpost_arn                                    = null
12:58:39                    + owner_id                                       = (known after apply)
12:58:39                    + private_dns_hostname_type_on_launch            = (known after apply)
12:58:39                    + tags                                           = (known after apply)
12:58:39                    + tags_all                                       = (known after apply)
12:58:39                    + timeouts                                       = null
12:58:39                    + vpc_id                                         = (known after apply)
12:58:39                  },
12:58:39              ]
12:58:39          }
12:58:39        + transit_gateway_attachment_id        = (known after apply)
12:58:39        + version                              = "0.7.0"
12:58:39        + vpc_endpoints_gateway                = [
12:58:39            + {
12:58:39                + s3 = {
12:58:39                    + arn                        = (known after apply)
12:58:39                    + auto_accept                = null
12:58:39                    + cidr_blocks                = (known after apply)
12:58:39                    + dns_entry                  = (known after apply)
12:58:39                    + dns_options                = (known after apply)
12:58:39                    + id                         = (known after apply)
12:58:39                    + ip_address_type            = (known after apply)
12:58:39                    + network_interface_ids      = (known after apply)
12:58:39                    + owner_id                   = (known after apply)
12:58:39                    + policy                     = (known after apply)
12:58:39                    + prefix_list_id             = (known after apply)
12:58:39                    + private_dns_enabled        = (known after apply)
12:58:39                    + requester_managed          = (known after apply)
12:58:39                    + resource_configuration_arn = null
12:58:39                    + route_table_ids            = (known after apply)
12:58:39                    + security_group_ids         = (known after apply)
12:58:39                    + service_name               = "com.amazonaws.us-east-2.s3"
12:58:39                    + service_network_arn        = null
12:58:39                    + service_region             = (known after apply)
12:58:39                    + state                      = (known after apply)
12:58:39                    + subnet_configuration       = (known after apply)
12:58:39                    + subnet_ids                 = (known after apply)
12:58:39                    + tags                       = {
12:58:39                        + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39                        + CostCenter       = "60031096"
12:58:39                        + Name             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39                        + SecurityReviewID = "NOT APPLICABLE"
12:58:39                        + ServiceNowAS     = "AS050854"
12:58:39                        + ServiceNowBA     = "BA14783"
12:58:39                        + Version          = "0.7.0"
12:58:39                      }
12:58:39                    + tags_all                   = {
12:58:39                        + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39                        + CostCenter       = "60031096"
12:58:39                        + Name             = "presigned-url-candidates-s3-gateway-endpoint"
12:58:39                        + SecurityReviewID = "NOT APPLICABLE"
12:58:39                        + ServiceNowAS     = "AS050854"
12:58:39                        + ServiceNowBA     = "BA14783"
12:58:39                        + Version          = "0.7.0"
12:58:39                      }
12:58:39                    + timeouts                   = null
12:58:39                    + vpc_endpoint_type          = "Gateway"
12:58:39                    + vpc_id                     = (known after apply)
12:58:39                  }
12:58:39              },
12:58:39          ]
12:58:39        + vpc_endpoints_interface_non_routable = []
12:58:39        + vpc_endpoints_interface_routable     = [
12:58:39            + {
12:58:39                + secretsmanager = {
12:58:39                    + arn                        = (known after apply)
12:58:39                    + auto_accept                = null
12:58:39                    + cidr_blocks                = (known after apply)
12:58:39                    + dns_entry                  = (known after apply)
12:58:39                    + dns_options                = (known after apply)
12:58:39                    + id                         = (known after apply)
12:58:39                    + ip_address_type            = (known after apply)
12:58:39                    + network_interface_ids      = (known after apply)
12:58:39                    + owner_id                   = (known after apply)
12:58:39                    + policy                     = (known after apply)
12:58:39                    + prefix_list_id             = (known after apply)
12:58:39                    + private_dns_enabled        = true
12:58:39                    + requester_managed          = (known after apply)
12:58:39                    + resource_configuration_arn = null
12:58:39                    + route_table_ids            = (known after apply)
12:58:39                    + security_group_ids         = (known after apply)
12:58:39                    + service_name               = "com.amazonaws.us-east-2.secretsmanager"
12:58:39                    + service_network_arn        = null
12:58:39                    + service_region             = (known after apply)
12:58:39                    + state                      = (known after apply)
12:58:39                    + subnet_configuration       = (known after apply)
12:58:39                    + subnet_ids                 = (known after apply)
12:58:39                    + tags                       = {
12:58:39                        + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39                        + CostCenter       = "60031096"
12:58:39                        + Name             = "presigned-url-candidates-secretsmanager-interface-endpoint-routable"
12:58:39                        + SecurityReviewID = "NOT APPLICABLE"
12:58:39                        + ServiceNowAS     = "AS050854"
12:58:39                        + ServiceNowBA     = "BA14783"
12:58:39                        + Version          = "0.7.0"
12:58:39                      }
12:58:39                    + tags_all                   = {
12:58:39                        + AssetOwner       = "BEF_DEVELOPMENT@express-scripts.com"
12:58:39                        + CostCenter       = "60031096"
12:58:39                        + Name             = "presigned-url-candidates-secretsmanager-interface-endpoint-routable"
12:58:39                        + SecurityReviewID = "NOT APPLICABLE"
12:58:39                        + ServiceNowAS     = "AS050854"
12:58:39                        + ServiceNowBA     = "BA14783"
12:58:39                        + Version          = "0.7.0"
12:58:39                      }
12:58:39                    + timeouts                   = null
12:58:39                    + vpc_endpoint_type          = "Interface"
12:58:39                    + vpc_id                     = (known after apply)
12:58:39                  }
12:58:39              },
12:58:39          ]
12:58:39      }
12:58:39  
12:58:39  Warning: Argument is deprecated
12:58:39  
12:58:39    with module.presigned-url-vpc.aws_iam_role.flow_logs_role,
12:58:39    on .terraform/modules/presigned-url-vpc/iam.tf line 3, in resource "aws_iam_role" "flow_logs_role":
12:58:39     3:   managed_policy_arns = ["arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"]
12:58:39  
12:58:39  The managed_policy_arns argument is deprecated. Use the
12:58:39  aws_iam_role_policy_attachment resource instead. If Terraform should
12:58:39  exclusively manage all managed policy attachments (the current behavior of
12:58:39  this argument), use the aws_iam_role_policy_attachments_exclusive resource as
12:58:39  well.
12:58:39  
12:58:39  (and one more similar warning elsewhere)
12:58:39  
12:58:39  ─────────────────────────────────────────────────────────────────────────────
12:58:39  
12:58:39  Saved the plan to: tf_plan.file
12:58:39  
12:58:39  To perform exactly these actions, run the following command to apply:
12:58:39      terraform apply "tf_plan.file"
12:58:39  
12:58:39  terraform plan successful
12:58:51  
12:58:51  terraform convert plan to json successful
12:58:51  
12:58:51  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
12:58:51  
12:58:51  Package: cnp-util-core
12:58:51  Version: 1.0.2-dev-ov2
12:58:51  Status: install ok installed
12:58:51  Priority: optional
12:58:51  Maintainer: Evernorth Software Engineering Excellence
12:58:51  Installed-Size: unknown
12:58:51  Depends: jq
12:58:51  Download-Size: unknown
12:58:51  APT-Manual-Installed: no
12:58:51  APT-Sources: /var/lib/dpkg/status
12:58:51  Description: Scripts and utilities for use with your cnp modules
12:58:51  
[Pipeline] fileExists
[Pipeline] readFile
[Pipeline] echo
12:58:51  {
12:58:51  "commandResult":"SUCCESS",
12:58:51  "commandOutput": {
12:58:51  }
12:58:51  }
12:58:51  
[Pipeline] sh
12:58:52  + rm cnp-deploy-terraform-aws-results.json
[Pipeline] echo
12:58:52  ---> END MODULE (Plan Dev Candidate:cnp-deploy-terraform-aws)
[Pipeline] }
[Pipeline] // dir
[Pipeline] echo
12:58:52  Phase caching is disabled, not stashing files.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // configFileProvider
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // container
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // container
[Pipeline] echo
12:58:52  <--- END PHASE 'Module'
[Pipeline] }
12:58:52  
[Pipeline] // ansiColor
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // podTemplate
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] echo
currentBuild.result = SUCCESS, isProd false
[Pipeline] echo
Using GitHubSCM provider for name: EPF, state: success, phase: Status Check, as: null
[Pipeline] withCredentials
Masking supported pattern matches of $EPF_GITHUB_ACCESS_TOKEN
[Pipeline] {
[Pipeline] echo
Posting Commit Status...
[Pipeline] httpRequest
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] parallel
[Pipeline] { (Branch: sendEmail)
[Pipeline] { (Branch: sendMattermost)
[Pipeline] { (Branch: sendTeams)
[Pipeline] { (Branch: sendWebex)
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] }
[Pipeline] // parallel
[Pipeline] echo
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                                                                               Compliance                                                                               |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|             Article              |                                            Statement                                             |              Status              |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|         CICD          |                              Pipeline does not implement a Deployment phase... Continuing                              |        SUCCESS        |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                                                                                                                                                                        |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                                                                                Pipeline                                                                                |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                         Phase                         |                         State                         |                      Environment                       |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|               Module(common: null dev)                |                        Success                        |                          dev                           |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|               Module(quality: scan dev)               |                        Success                        |                          dev                           |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|              Linting([approvalrequest])               |                        Success                        |                       Undefined                        |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                Module(terraform: plan)                |                        Success                        |                       Undefined                        |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|                                      Please see https://github.sys.cigna.com/cigna/enterprise-pipeline-framework for phase types.                                      |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[Pipeline] }
[Pipeline] // sendSplunkConsoleLog
[Pipeline] End of Pipeline

GitHub has been notified of this commit’s build result

Finished: SUCCESS
